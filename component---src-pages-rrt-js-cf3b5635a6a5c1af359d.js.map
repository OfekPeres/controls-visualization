{"version":3,"file":"component---src-pages-rrt-js-cf3b5635a6a5c1af359d.js","mappings":"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","sources":["webpack://controls-visualizer/./src/components/rrtVisualization/rrtSketch.js","webpack://controls-visualizer/./src/components/rrtVisualization/axiosHelpers.js","webpack://controls-visualizer/./src/components/rrtVisualization/helpers.jsx","webpack://controls-visualizer/./src/components/rrtVisualization/index.jsx","webpack://controls-visualizer/./src/pages/rrt.js"],"sourcesContent":["export default function rrtSketchFunction(\n  rrtState,\n  sketchState,\n  setSketchState,\n  menuValue,\n  shouldAnimate\n) {\n  return (p5) => {\n    // Define some sketch constants\n    const W = sketchState.canvasWidth;\n    const H = sketchState.canvasHeight;\n    // Define some colors\n    const green = p5.color(0, 255, 0);\n    const blue = p5.color(0, 50, 255);\n    const red = p5.color(255, 50, 10);\n\n    // RRT Animation values\n    let explorationIndex = 0;\n    let isExplorationComplete = false;\n    let goalPathNodes = [];\n    // Collect the goal path as an array that can be iterated over backwards to\n    // go from start to goal\n    if (rrtState) {\n      let goalNode = rrtState.points[rrtState.targetNodeIndex];\n      while (goalNode) {\n        goalPathNodes.push(goalNode);\n        goalNode = rrtState.points[goalNode.parentIndex];\n      }\n    }\n    let goalPathDrawingIndex = goalPathNodes.length - 1;\n\n    /**\n     * A Method to draw all of the points in the rrtState object\n     */\n    function drawRRTPoints() {\n      // Draw all of the points in the graph\n      p5.stroke(blue);\n      p5.strokeWeight(2);\n      rrtState.points.forEach((point) => {\n        const { x, y } = point;\n        p5.fill(green);\n        p5.circle(x, y, 3);\n        // connect the current point to its \"parent\" with a line\n        if (point.parentIndex !== -1) {\n          const parent = rrtState.points[point.parentIndex];\n          const { x: parentX, y: parentY } = parent;\n          p5.line(x, y, parentX, parentY);\n        }\n      });\n      // Draw Goal Path\n      const goalNode = rrtState.points[rrtState.targetNodeIndex];\n      let point = goalNode;\n      p5.stroke(green);\n      p5.strokeWeight(3);\n      while (point.parentIndex !== -1) {\n        const parent = rrtState.points[point.parentIndex];\n        const { x: parentX, y: parentY } = parent;\n        p5.line(point.x, point.y, parentX, parentY);\n        point = rrtState.points[point.parentIndex];\n      }\n    }\n\n    function animateRRTExploration() {\n      p5.stroke(blue);\n      p5.strokeWeight(2);\n      const point = rrtState.points[explorationIndex];\n      p5.fill(green);\n      p5.circle(point.x, point.y, 3);\n      if (point.parentIndex !== -1) {\n        const parent = rrtState.points[point.parentIndex];\n        p5.line(point.x, point.y, parent.x, parent.y);\n      }\n\n      if (explorationIndex < rrtState.points.length - 1) explorationIndex++;\n      else {\n        isExplorationComplete = true;\n      }\n    }\n    function animateRRTGoalPath() {\n      if (!isExplorationComplete) return;\n      // Draw Goal Path\n      const point = goalPathNodes[goalPathDrawingIndex];\n\n      p5.stroke(green);\n      p5.strokeWeight(3);\n      const nextNode = goalPathNodes[goalPathDrawingIndex - 1];\n\n      p5.line(point.x, point.y, nextNode.x, nextNode.y);\n      if (goalPathDrawingIndex > 1) {\n        goalPathDrawingIndex--;\n      }\n    }\n\n    /**\n     * A method to draw all of the currently defined obstacles\n     */\n    function drawObstacles() {\n      p5.stroke(red);\n      p5.fill(red);\n      sketchState.obstacles.forEach((obs) => {\n        switch (obs.shape) {\n          case 'rectangle':\n            p5.rect(obs.x, obs.y, obs.w, obs.h);\n            break;\n          case 'circle':\n            p5.circle(obs.x, obs.y, obs.r * 2);\n            break;\n          default:\n        }\n      });\n    }\n\n    /**\n     * A method to draw the start and goal nodes\n     */\n    function drawStartandGoal() {\n      p5.stroke(green);\n      p5.fill(green);\n      const {\n        x: xstart,\n        y: ystart,\n        radius: startRadius,\n      } = sketchState.startPoint;\n      const { x: xgoal, y: ygoal, radius: goalRadius } = sketchState.goalPoint;\n\n      p5.circle(xstart, ystart, startRadius * 2);\n      p5.stroke(p5.color(0));\n      p5.fill(blue);\n      p5.circle(xgoal, ygoal, goalRadius * 2);\n    }\n\n    function handleMouseClicked() {\n      switch (menuValue.value) {\n        case 'Circle':\n          const circle = {\n            shape: 'circle',\n            x: p5.mouseX,\n            y: p5.mouseY,\n            r: sketchState.circle.radius,\n          };\n          setSketchState((prev) => ({\n            ...prev,\n            obstacles: [...prev.obstacles, circle],\n          }));\n          break;\n\n        case 'Rectangle':\n          const rectangle = {\n            shape: 'rectangle',\n            x: p5.mouseX,\n            y: p5.mouseY,\n            w: sketchState.rectangle.width,\n            h: sketchState.rectangle.height,\n          };\n          setSketchState((prev) => ({\n            ...prev,\n            obstacles: [...prev.obstacles, rectangle],\n          }));\n          break;\n\n        case 'Start Node':\n          setSketchState((prev) => ({\n            ...prev,\n            startPoint: { ...prev.startPoint, x: p5.mouseX, y: p5.mouseY },\n          }));\n          break;\n\n        case 'Goal Node':\n          setSketchState((prev) => ({\n            ...prev,\n            goalPoint: { ...prev.goalPoint, x: p5.mouseX, y: p5.mouseY },\n          }));\n          break;\n        default:\n          return;\n      }\n    }\n\n    /**\n     * The setup function for the sketch\n     */\n    function setup() {\n      const canvas = p5.createCanvas(W, H);\n      // p5.frameRate(1)\n      canvas.mousePressed(handleMouseClicked);\n      p5.background(55);\n\n      if (sketchState && rrtState) {\n        // Draw Start and Goal as green\n        drawStartandGoal();\n        // Draw the rrt graph\n        if (!shouldAnimate) {\n          drawRRTPoints();\n        }\n        //   Draw Obstacles in red\n        drawObstacles();\n      }\n    }\n    /**\n     *\n     * The draw function for the sketch\n     */\n\n    function draw() {\n      if (shouldAnimate && rrtState && sketchState) {\n        animateRRTExploration();\n        animateRRTGoalPath();\n      }\n    }\n\n    // Set all of the p5 objects important functions here\n    p5.setup = setup;\n    p5.draw = draw;\n\n    // p5.draw = () => draw(p5)\n    // p5.mousePressed = () => handleMouseClicked();\n  };\n}\n","function convertObstaclesToBackendFormat(obstacles) {\n  return obstacles.map((obstacle) => {\n    switch (obstacle.shape) {\n      case 'rectangle':\n        const x_lower = obstacle.x;\n        const y_lower = obstacle.y;\n        const x_upper = x_lower + obstacle.w;\n        const y_upper = y_lower + obstacle.h;\n        return {\n          shape: obstacle.shape,\n          definition: [x_lower, y_lower, x_upper, y_upper],\n        };\n        break;\n\n      case 'circle':\n        return {\n          shape: obstacle.shape,\n          definition: [obstacle.x, obstacle.y, obstacle.r],\n        };\n        break;\n      default:\n        return null;\n    }\n  });\n}\n\nexport function preparePayload(sketchState) {\n  const payload = {};\n  payload['start'] = [sketchState.startPoint.x, sketchState.startPoint.y];\n  payload['goal'] = [sketchState.goalPoint.x, sketchState.goalPoint.y];\n  payload['goalRadius'] = sketchState.goalPoint.radius;\n  payload['width'] = sketchState.canvasWidth;\n  payload['height'] = sketchState.canvasHeight;\n  payload['d_max'] = sketchState.stepSize;\n  payload['obstacles'] = convertObstaclesToBackendFormat(sketchState.obstacles);\n\n  return payload;\n}\n","import React from 'react';\nimport Slider from '../ui/slider';\nfunction StartNodeSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div className=\"flex flex-col justify-center items-center\">\n      <p>The Start Node Radius is: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction GoalNodeSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div>\n      <p>The Goal Area Radius is: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction CircleRadiusSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div>\n      <p>Set the radius of the circle obstacles: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction StepSizeRadiusSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div>\n      <p>Set the max step size for the RRT algorithm: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction RectangleSizeSlider({\n  width,\n  height,\n  setWidth,\n  setHeight,\n  min,\n  max,\n  step,\n  color,\n}) {\n  return (\n    <div>\n      <h3 className=\"text-lg font-bold\">\n        Set the Dimensions of the Rectangular Obstacles\n      </h3>\n      <p>Set the Width: {width}</p>\n      <Slider\n        value={width}\n        setValue={setWidth}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n      <p>Set the Height: {height}</p>\n      <Slider\n        value={height}\n        setValue={setHeight}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nexport {\n  StartNodeSlider,\n  GoalNodeSlider,\n  RectangleSizeSlider,\n  CircleRadiusSlider,\n  StepSizeRadiusSlider\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport p5 from 'p5';\nimport axios from 'axios';\nimport ListBox from '../ui/listbox';\nimport rrtSketchFunction from './rrtSketch';\nimport { useDebounce } from '../../customhooks/debounce';\nimport { preparePayload } from './axiosHelpers';\nimport ReactLoading from 'react-loading';\nimport {\n  StartNodeSlider,\n  GoalNodeSlider,\n  RectangleSizeSlider,\n  CircleRadiusSlider,\n  StepSizeRadiusSlider,\n} from './helpers';\n\nconst SHAPES = [\n  { id: 1, value: 'Start Node', unavailable: false },\n  { id: 2, value: 'Goal Node', unavailable: false },\n  { id: 3, value: 'Rectangle', unavailable: false },\n  { id: 4, value: 'Circle', unavailable: false },\n  { id: 5, value: 'Step Size', unavailable: false },\n];\n\nconst initialSketchState = {\n  obstacles: [],\n  startPoint: {\n    x: 15,\n    y: 15,\n    radius: 15,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  goalPoint: {\n    x: 300,\n    y: 300,\n    radius: 30,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  stepSize: 28,\n  circle: {\n    radius: 20,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  rectangle: {\n    height: 20,\n    width: 20,\n    minLength: 1,\n    maxLength: 100,\n    step: 1,\n  },\n  canvasWidth: 600,\n  canvasHeight: 600,\n};\n\nconst initialRRTState = {\n  goal: [],\n  goalRadius: 1,\n  obstacles: [],\n  points: [],\n};\n/**\n * The state of the RRT visualization defaults to null, is updated by the user\n * (for things like start, end, and obstacles), submits these to the backend\n * and gets back an object including a list of points\n * state = {\n * goal: array of 2 numbers [x,y],\n * goalRadius: number,\n * obstacles: array of objects, each object has the form {shape: string, definition: array}\n * (i.e. {shape:circle, definition: [0,0,1]}),\n * points: array of objects {x:number, y:number, parentIndex: number},\n *                          targetNodeIndex: number (the index of the point in the rrt at the goal )\n *\n * }\n * @returns\n */\nexport default function RRTVisualization() {\n  /*----------------------------------------------------------------------------\n  SET UP STATE AND REFS\n  --------------------------------------------------------------------------- */\n  const [state, setState] = useState(null);\n  const [sketchState, setSketchState] = useState(initialSketchState);\n  const [menuValue, setMenuValue] = useState('circle');\n  const [isLoading, setIsLoading] = useState(false);\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n\n  const debouncedSketchState = useDebounce(sketchState, 250);\n  const ref = useRef();\n\n  /*----------------------------------------------------------------------------\n  GET INITIAL RRT Example MAP WHEN THE PAGE LOADS \n  // TODO: FIX THIS NONSENSE\n  --------------------------------------------------------------------------- */\n  useEffect(() => {\n    async function fetchData() {\n      const payload = await axios.post(\n        `${process.env.GATSBY_BACKEND_URL}/rrt`,\n        preparePayload(sketchState)\n      );\n      setState(payload.data);\n    }\n\n    fetchData();\n  }, []);\n\n  /*----------------------------------------------------------------------------\n  Send the user defined map to the backend to solve it!\n  --------------------------------------------------------------------------- */\n  async function getRRTMap() {\n    if (isLoading) return;\n    setIsLoading(true);\n    const url = `${process.env.GATSBY_BACKEND_URL}/rrt`;\n    const payload = await axios.post(url, preparePayload(sketchState));\n    setIsLoading(false);\n    setShouldAnimate(true);\n    setState(payload.data);\n  }\n  /*----------------------------------------------------------------------------\n  THIS IS THE USE EFFECT THAT MANAGES THE P5 RRT SKETCH FUNCTION\n  --------------------------------------------------------------------------- */\n  // This is the effect in charge of managing the p5 sketch\n  useEffect(() => {\n    let myp5 = new p5(\n      rrtSketchFunction(state, sketchState, setSketchState, menuValue, shouldAnimate),\n      ref.current\n    );\n    setShouldAnimate(false);\n    // Return a function that deletes the canvas so we don't have duplicates\n    return () => {\n      myp5.remove();\n    };\n  }, [state, debouncedSketchState, menuValue]);\n\n  /*----------------------------------------------------------------------------\n  HELPER FUNCTIONS TO ORGANIZE OUR SET STATE FOR THE DIFFERENT SLIDERS\n  --------------------------------------------------------------------------- */\n  // Helper Functions to manage state:\n  /**\n   *\n   * @param {*} value The new Start Point Radius being captured by the slider input\n   */\n  function setStartPointRadius(value) {\n    setSketchState((prev) => {\n      return { ...prev, startPoint: { ...prev.startPoint, radius: value } };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new Goal Point Radius being captured by the slider input\n   */\n  function setGoalPointRadius(value) {\n    setSketchState((prev) => {\n      return {\n        ...prev,\n        goalPoint: { ...prev.goalPoint, radius: value },\n      };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new rectangle obstacle width\n   */\n  function setRectangleWidth(value) {\n    setSketchState((prev) => {\n      return { ...prev, rectangle: { ...prev.rectangle, width: value } };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new rectangle obstacle height\n   */\n  function setRectangleHeight(value) {\n    setSketchState((prev) => {\n      return { ...prev, rectangle: { ...prev.rectangle, height: value } };\n    });\n  }\n\n  function setCircleRadius(value) {\n    setSketchState((prev) => {\n      return { ...prev, circle: { ...prev.circle, radius: value } };\n    });\n  }\n\n  function setStepSize(value) {\n    setSketchState((prev) => {\n      return { ...prev, stepSize: value };\n    });\n  }\n  return (\n    <div className=\"flex flex-col items-center justify-center h-full relative\">\n      {/* IMPORTANT NOTE: REMEMBER TO SET THE WIDTH AND HEIGHT OF THE CANVAS ON THE DIV OR IT WILL HAVE STRANGE SCROLLING BEHAVIOR!!!!!!!!! */}\n      <div>\n        {isLoading ? (\n          <div className=\"flex items-center justify-center space-x-3\">\n            <p>\"Waiting for backend to deliver results!\"</p>\n            <ReactLoading\n              type=\"spinningBubbles\"\n              color=\"blue\"\n              width=\"24px\"\n              height=\"24px\"\n            ></ReactLoading>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n      <div\n        className=\"cursor-pointer\"\n        style={{\n          height: `${sketchState.canvasHeight}px`,\n          width: `${sketchState.canvasWidth}px`,\n        }}\n        ref={ref}\n      ></div>\n      <ListBox options={SHAPES} updateParentSelection={setMenuValue} />\n      <div className=\"flex justify-center items-center space-x-3\">\n        <button\n          className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:cursor-not-allowed\"\n          onClick={() => getRRTMap()}\n          disabled={isLoading}\n        >\n          Generate the RRT Map!\n        </button>\n        <button\n          className=\"bg-red-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-red-400 hover:ring hover:ring-red-400\"\n          onClick={() => setSketchState({ ...sketchState, obstacles: [] })}\n        >\n          Clear Obstacles (X)\n        </button>\n      </div>\n      <div className=\"flex flex-col\">\n        {\n          {\n            'Start Node': (\n              <StartNodeSlider\n                value={sketchState.startPoint.radius}\n                setValue={setStartPointRadius}\n                min={sketchState.startPoint.minRadius}\n                max={sketchState.startPoint.maxRadius}\n                step={sketchState.startPoint.step}\n                color={'#0079D9'}\n              ></StartNodeSlider>\n            ),\n            'Goal Node': (\n              <GoalNodeSlider\n                value={sketchState.goalPoint.radius}\n                setValue={setGoalPointRadius}\n                min={sketchState.goalPoint.minRadius}\n                max={sketchState.goalPoint.maxRadius}\n                step={sketchState.goalPoint.step}\n                color={'#bad7f2'}\n              ></GoalNodeSlider>\n            ),\n            Rectangle: (\n              <RectangleSizeSlider\n                width={sketchState.rectangle.width}\n                height={sketchState.rectangle.height}\n                setWidth={setRectangleWidth}\n                setHeight={setRectangleHeight}\n                min={sketchState.rectangle.minLength}\n                max={sketchState.rectangle.maxLength}\n                step={sketchState.rectangle.step}\n                color={'#baf2bb'}\n              ></RectangleSizeSlider>\n            ),\n            Circle: (\n              <CircleRadiusSlider\n                value={sketchState.circle.radius}\n                setValue={setCircleRadius}\n                min={sketchState.circle.minRadius}\n                max={sketchState.circle.maxRadius}\n                step={sketchState.circle.step}\n                color={'#bad7f2'}\n              ></CircleRadiusSlider>\n            ),\n            'Step Size': (\n              <StepSizeRadiusSlider\n                value={sketchState.stepSize}\n                setValue={setStepSize}\n                min={10}\n                max={100}\n                step={1}\n                color={'#bad7f2'}\n              ></StepSizeRadiusSlider>\n            ),\n          }[menuValue.value]\n        }\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport RRTVisualization from '../components/rrtVisualization';\n// markup\nconst IndexPage = () => {\n  return (\n    <main>\n      <div className=\"bg-blue-300 text-6xl flex items-center justify-center py-6 mb-6\">Example RRT</div>\n      {typeof window !== 'undefined' && <RRTVisualization/>} \n    </main>\n  );\n};\n\nexport default IndexPage;\n"],"names":["rrtSketchFunction","rrtState","sketchState","setSketchState","menuValue","shouldAnimate","p5","W","canvasWidth","H","canvasHeight","green","color","blue","red","explorationIndex","isExplorationComplete","goalPathNodes","goalNode","points","targetNodeIndex","push","parentIndex","goalPathDrawingIndex","length","handleMouseClicked","value","circle","shape","x","mouseX","y","mouseY","r","radius","prev","obstacles","rectangle","w","width","h","height","startPoint","goalPoint","setup","createCanvas","mousePressed","background","stroke","fill","xstart","ystart","startRadius","xgoal","ygoal","goalRadius","drawStartandGoal","strokeWeight","forEach","point","parent","parentX","parentY","line","drawRRTPoints","obs","rect","draw","animateRRTExploration","nextNode","animateRRTGoalPath","preparePayload","payload","stepSize","map","obstacle","x_lower","y_lower","x_upper","y_upper","definition","StartNodeSlider","setValue","min","max","step","className","GoalNodeSlider","CircleRadiusSlider","StepSizeRadiusSlider","RectangleSizeSlider","setWidth","setHeight","SHAPES","id","unavailable","initialSketchState","minRadius","maxRadius","minLength","maxLength","RRTVisualization","useState","state","setState","setMenuValue","isLoading","setIsLoading","setShouldAnimate","debouncedSketchState","useDebounce","ref","useRef","process","axios","data","useEffect","fetchData","myp5","current","remove","type","style","options","updateParentSelection","onClick","getRRTMap","disabled","Rectangle","Circle","window"],"sourceRoot":""}
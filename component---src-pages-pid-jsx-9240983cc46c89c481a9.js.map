{"version":3,"file":"component---src-pages-pid-jsx-9240983cc46c89c481a9.js","mappings":"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","sources":["webpack://controls-visualizer/./src/carVisualizer/car.js","webpack://controls-visualizer/./src/components/pidVisualization/pidSketch.js","webpack://controls-visualizer/./src/components/pidVisualization/index.jsx","webpack://controls-visualizer/./src/pages/pid.jsx"],"sourcesContent":["class Car {\n  // Instance variables\n  speed = 0; // Car scalar speed\n  phi = 0; // Wheel angle\n\n  max_steer = 0.5; // Wheel rotation limit\n  max_speed = 50; // Arbitrary choice for max car speed\n\n  theta_dot = 0; // Rate of change of orientation\n\n  constructor(x_, y_, theta_, phi_, length, color, car_ref, p5) {\n    // Location vector\n    this.loc = p5.createVector(x_, y_);\n    // Velocity vector\n    this.vel = p5.createVector(1, 1);\n    // Starting angle (0 = right, pi/2 = down, pi = left, 3pi/2 = up)\n    this.theta = theta_;\n    this.p5 = p5; // utilize p5 instance passed in to car object\n    // Car dimensions\n    this.car_len = length;\n    this.car_wid = this.car_len / 2.5;\n    this.tyre_wid = this.car_wid / 7;\n    this.tyre_len = this.car_len / 6.6;\n    this.color = color;\n    this.car_ref = car_ref;\n    this.phi = phi_;\n    this.shouldDrawImpossibleRegion = false;\n  }\n  /**\n   * A function that manages running the car. Both displays the car and runs it\n   * thru the dynamics\n   */\n  run() {\n    this.display();\n    this.move();\n    if (this.car_ref) {\n      this.car_ref.current = {\n        x: this.loc.x,\n        y: this.loc.y,\n        theta: this.theta,\n        phi: this.phi,\n      };\n    }\n  }\n\n  /**\n   * A function to draw the car onto the screen with the correct position and\n   * orientation\n   */\n  display() {\n    this.p5.push();\n    this.p5.translate(this.loc.x, this.loc.y); // Move to ref frame of the car (car center is now <0, 0>)\n    this.p5.rotate(this.theta); // Rotate reference frame to match car orientation\n\n    this.draw_car_body(); // draw main car body + back wheels\n    this.draw_front_wheels(); // draw fron wheels angled by (phi)\n    this.p5.pop();\n  }\n\n  /**\n   * A Helper function to draw the body of the car\n   */\n  draw_car_body() {\n    if (this.shouldDrawImpossibleRegion) this.drawImpossibleRegion();\n    // Car body\n    this.p5.stroke(0);\n    this.p5.strokeWeight(2);\n    this.p5.fill(this.color);\n    let top_x = -this.car_len / 2;\n    let top_y = -this.car_wid / 2;\n    this.p5.rect(top_x, top_y, this.car_len, this.car_wid, 10); // car body\n\n    // Back Wheels\n    this.p5.fill(0);\n    this.p5.noStroke();\n    let back_x = -this.car_len / 2 + this.tyre_len / 3;\n    let top_back_y = -this.car_wid / 2 + 0.5 * this.tyre_wid;\n    let btm_back_y = this.car_wid / 2 - 1.5 * this.tyre_wid;\n    this.p5.rect(back_x, top_back_y, this.tyre_len, this.tyre_wid, 5);\n    this.p5.rect(back_x, btm_back_y, this.tyre_len, this.tyre_wid, 5);\n  }\n\n  /**\n   * A Helper function to draw the front wheels (with the correct phi angle)\n   */\n  draw_front_wheels() {\n    this.p5.noStroke();\n    this.p5.fill(0);\n\n    let front_center_x =\n      this.car_len / 2 - this.tyre_len / 2 - this.tyre_len / 3;\n    let top_front_center_y = -this.car_wid / 2 + this.tyre_wid;\n    let btm_front_center_y = this.car_wid / 2 - this.tyre_wid;\n\n    // Front Left wheel\n    this.p5.push();\n    this.p5.translate(front_center_x, top_front_center_y);\n    this.p5.rotate(this.phi);\n    this.p5.rect(\n      -this.tyre_len / 2,\n      -this.tyre_wid / 2,\n      this.tyre_len,\n      this.tyre_wid,\n      5\n    );\n    this.p5.pop();\n\n    // Fron right wheel\n    this.p5.push();\n    this.p5.translate(front_center_x, btm_front_center_y);\n    this.p5.rotate(this.phi);\n    this.p5.rect(\n      -this.tyre_len / 2,\n      -this.tyre_wid / 2,\n      this.tyre_len,\n      this.tyre_wid,\n      5\n    );\n    this.p5.pop();\n\n    // Draw a vector to make it clear what direction the car is pointing\n    this.p5.push();\n    this.p5.stroke(220);\n    this.p5.strokeWeight(1);\n    this.p5.fill(180);\n    this.p5.rotate(-this.p5.PI / 2);\n    this.p5.line(0, 0, 0, this.car_len / 2);\n    this.p5.translate(0, this.car_len / 2);\n    this.p5.triangle(-5, 0, 0, 5, 5, 0);\n    this.p5.pop();\n  }\n\n  /**\n   *\n   * @param {*} u The new steering angle of the car\n   */\n  steer(phi) {\n    if (phi > this.max_steer) this.phi = this.max_steer;\n    else if (phi < -this.max_steer) this.phi = -this.max_steer;\n    else this.phi = phi;\n  }\n\n  /**\n   *\n   * @param {*} speed The new speed of the car\n   */\n  setSpeed(speed) {\n    if (speed > this.max_speed) this.speed = this.max_speed;\n    else if (speed < -this.max_speed) this.speed = -this.max_spee;\n    else this.speed = speed;\n  }\n  /**\n   * The dynamics of the car are encoded in this function. A call to move \"steps\"\n   * the car forward in time once based on its current position, orientation,\n   * and steering angle (phi)\n   */\n  move() {\n    // Update velocity, theta and location\n\n    this.vel.x = this.speed * Math.cos(this.theta);\n    this.vel.y = this.speed * Math.sin(this.theta);\n    this.theta_dot = (this.speed * Math.tan(this.phi)) / this.car_len;\n    this.theta += this.theta_dot;\n    this.loc.add(this.vel);\n  }\n\n  // Width and height (600) are hard-coded magic numbers atm.\n  dont_crash() {\n    if (this.loc.x < -this.car_len * 2) {\n      this.loc.x = 0;\n      this.speed = 0;\n    }\n\n    if (this.loc.x > 800) {\n      this.loc.x = 600;\n      this.speed = 0;\n    }\n\n    if (this.loc.y < -50) {\n      this.loc.y = 0;\n      this.speed = 0;\n    }\n\n    if (this.loc.y > 700) {\n      this.loc.y = 600;\n      this.speed = 0;\n    }\n  }\n\n  track(targetX, targetY, dist2goal) {\n    if (dist2goal == null || dist2goal == undefined) {\n      dist2goal = 10;\n    }\n    for (let i = 0; i < 20; i++) {\n      const deltaX = targetX - this.loc.x;\n      const deltaY = targetY - this.loc.y;\n\n      const heading = this.p5.createVector(\n        this.p5.cos(this.theta),\n        this.p5.sin(this.theta)\n      );\n      const car2goal = this.p5.createVector(deltaX, deltaY).normalize();\n\n      const thetaError = heading.angleBetween(car2goal);\n\n      if (thetaError > 0) {\n        this.phi = this.max_steer;\n      } else if (thetaError < 0) {\n        this.phi = -this.max_steer;\n      } else {\n        this.phi = 0;\n      }\n\n      this.speed = 0.1;\n      // if (Math.abs(deltaX) < dist2goal && Math.abs(deltaY) < dist2goal) {\n      //   this.speed = 0;\n      // } else {\n      //   this.speed = 0.1;\n      // }\n      this.move();\n    }\n  }\n\n  drawImpossibleRegion() {\n    this.p5.noFill();\n    this.p5.stroke('red');\n    const radius = this.car_len / this.p5.tan(this.max_steer);\n    this.p5.circle(0, radius, radius * 2);\n    this.p5.circle(0, -radius, radius * 2);\n  }\n\n  getCarState() {\n    return { x: this.loc.x, y: this.loc.y, theta: this.theta };\n  }\n}\n\nexport default Car;\n","import Car from '../../carVisualizer/car';\nexport default function pidSketchFunction(\n  pidState,\n  sketchState,\n  setSketchState,\n  car_ref\n) {\n  return (p5) => {\n    // Define some sketch constants\n    const W = sketchState.canvasWidth;\n    const H = sketchState.canvasHeight;\n    // Define some colors\n    const green = p5.color(0, 255, 0);\n    const blue = p5.color(0, 50, 255);\n    const red = p5.color(255, 50, 10);\n    let car = new Car(\n      car_ref.current.x,\n      car_ref.current.y,\n      car_ref.current.theta,\n      car_ref.current.phi,\n      sketchState.carLength,\n      sketchState.carColor,\n      car_ref,\n      p5\n    );\n\n    car.setSpeed(0);\n    // SETUP\n    function setup() {\n      const canvas = p5.createCanvas(W, H);\n      p5.background(100);\n      canvas.mousePressed(mousePressed);\n    }\n\n    function drawWayPoints() {\n      sketchState.waypoints.forEach((point) => {\n        p5.circle(point.x, point.y, sketchState.carLength * 0.5);\n        p5.text(\n          point.index,\n          point.x - sketchState.carLength * 0.05,\n          point.y - sketchState.carLength * 0.01\n        );\n      });\n    }\n\n    // Control Index needs to be outside the draw function in order to persist\n    // between loops\n    let controlIndex = 0;\n    function draw() {\n      //   !!!!! use front end pid\n      p5.background(100);\n      //   p5.circle(cx, cy, r);\n      //   car.track(cx, cy, 1);\n      drawWayPoints();\n      //  !!!! Animate thru controls\n      if (\n        sketchState.hasControlInputs &&\n        controlIndex < pidState.controls.length - 1\n      ) {\n        car.setSpeed(sketchState.carSpeed);\n        car.steer(pidState.controls[controlIndex]);\n        controlIndex++;\n        car.run();\n        if (controlIndex == pidState.controls.length - 1) {\n          car.setSpeed(0);\n          setSketchState((prev) => ({ ...prev, hasControlInputs: false }));\n        }\n      } else {\n        //     car = new Car(0,0,0, p5)\n        //     controlIndex = 0\n        car.run();\n      }\n    }\n\n    function keyPressed() {\n      if (p5.keyCode === p5.UP_ARROW || p5.key === 'w')\n        car.setSpeed(car.speed + 1);\n      else if (p5.keyCode === p5.DOWN_ARROW || p5.key === 's')\n        car.setSpeed(car.speed - 1);\n      else if (p5.keyCode === p5.LEFT_ARROW || p5.key === 'a')\n        car.steer(car.phi - 0.5);\n      else if (p5.keyCode === p5.RIGHT_ARROW || p5.key === 'd')\n        car.steer(car.phi + 0.5);\n      else if (p5.key === 't') {\n        car.shouldDrawImpossibleRegion = !car.shouldDrawImpossibleRegion;\n      }\n    }\n    function mousePressed() {\n      // Set Waypoint!\n      const waypoint = {\n        x: p5.mouseX,\n        y: p5.mouseY,\n        index: sketchState.waypoints.length + 1,\n      };\n      setSketchState((prev) => ({\n        ...prev,\n        waypoints: [...sketchState.waypoints, waypoint],\n      }));\n    }\n\n    p5.setup = setup;\n    p5.draw = draw;\n    p5.keyPressed = keyPressed;\n  };\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport p5 from 'p5';\nimport ReactLoading from 'react-loading';\nimport axios from 'axios';\nimport Slider from '../ui/slider';\nimport pidSketchFunction from './pidSketch';\nconst initialState = {\n  waypoints: [],\n  controls: [],\n};\n\nconst initialSketchState = {\n  carLength: 70,\n  carSpeed: 1,\n  carColor: '#ee6352',\n  waypoints: [],\n  canvasWidth: 600,\n  canvasHeight: 600,\n  hasControlInputs: false,\n};\nfunction PIDExample() {\n  const [state, setState] = useState(initialState);\n  const [sketchState, setSketchState] = useState(initialSketchState);\n  const [isLoading, setIsLoading] = useState(false);\n  const canvas_ref = useRef();\n  const car_ref = useRef({\n    x: sketchState.canvasWidth / 2,\n    y: sketchState.canvasHeight / 2,\n    theta: 0,\n    phi: 0,\n  });\n\n  /*----------------------------------------------------------------------------\n  Send the user defined waypoints to the backend to get the control inputs \n  to drive to!\n  --------------------------------------------------------------------------- */\n  async function getBangBangPIDControls() {\n    if (isLoading) return;\n    setIsLoading(true);\n    const url = `${process.env.GATSBY_BACKEND_URL}/bangbang`;\n\n    const postData = {\n      carLength: sketchState.carLength,\n      carSpeed: sketchState.carSpeed,\n      waypoints: sketchState.waypoints,\n      ...car_ref.current,\n    };\n    const payload = await axios.post(url, postData);\n    setIsLoading(false);\n    setState(payload.data);\n    setSketchState((prev) => ({ ...prev, hasControlInputs: true }));\n  }\n  useEffect(() => {\n    const my_p5 = new p5(\n      pidSketchFunction(state, sketchState, setSketchState, car_ref),\n      canvas_ref.current\n    );\n    return () => my_p5.remove();\n  }, [state, sketchState]);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center\">\n      {isLoading ? (\n        <div className=\"flex items-center justify-center space-x-3\">\n          <p>\"Waiting for backend to deliver results!\"</p>\n          <ReactLoading\n            type=\"spinningBubbles\"\n            color=\"blue\"\n            width=\"24px\"\n            height=\"24px\"\n          ></ReactLoading>\n        </div>\n      ) : (\n        ''\n      )}\n      <div\n        ref={canvas_ref}\n        style={{\n          width: sketchState.canvasWidth,\n          height: sketchState.canvasHeight,\n        }}\n      ></div>\n      <div className=\"flex justify-center items-center space-x-3\">\n        <button\n          className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:cursor-not-allowed\"\n          onClick={() => getBangBangPIDControls()}\n          disabled={isLoading}\n        >\n          Calculate the control inputs!\n        </button>\n        <button\n          className=\"bg-red-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-red-400 hover:ring hover:ring-red-400\"\n          onClick={() => {\n            setSketchState({\n              ...sketchState,\n              waypoints: [],\n              hasControlInputs: false,\n            });\n          }}\n        >\n          Clear Waypoints (X)\n        </button>\n      </div>\n      <div className=\"flex flex-col items-center justify-center text-lg\">\n        <h1 className=\"text-3xl font-bold\">Customize your car!</h1>\n        <h3>Set the Length of your car: {sketchState.carLength}</h3>\n        <Slider\n          value={sketchState.carLength}\n          setValue={(value) =>\n            setSketchState({ ...sketchState, carLength: value })\n          }\n          min={20}\n          max={100}\n          step={1}\n          color={'blue'}\n        />\n        <h3>Set the Speed of your car: {sketchState.carSpeed}</h3>\n        <Slider\n          value={sketchState.carSpeed}\n          setValue={(value) =>\n            setSketchState({ ...sketchState, carSpeed: value })\n          }\n          min={1}\n          max={sketchState.carLength}\n          step={1}\n          color={'green'}\n        />\n        <h3>Set the Color of your car</h3>\n        <input\n          type=\"color\"\n          value={sketchState.carColor}\n          onInput={(e) =>\n            setSketchState({ ...sketchState, carColor: e.target.value })\n          }\n        />\n      </div>\n      <div>{JSON.stringify(state)}</div>\n    </div>\n  );\n}\n\nexport default PIDExample;\n","import React from 'react';\nimport PIDVisualization from '../components/pidVisualization'\n\n// markup\nfunction PID() {\n    return (\n        <main>\n            <div className=\"bg-blue-300 text-6xl flex items-center justify-center py-6 mb-6\"> PID Visualization</div>\n            {typeof window !== 'undefined' && <PIDVisualization></PIDVisualization>}\n            <div>Hello</div>\n        </main>\n    );\n};\n\nexport default PID;\n"],"names":["Car","x_","y_","theta_","phi_","length","color","car_ref","p5","speed","phi","max_steer","max_speed","theta_dot","this","loc","createVector","vel","theta","car_len","car_wid","tyre_wid","tyre_len","shouldDrawImpossibleRegion","run","display","move","current","x","y","push","translate","rotate","draw_car_body","draw_front_wheels","pop","drawImpossibleRegion","stroke","strokeWeight","fill","top_x","top_y","rect","noStroke","back_x","top_back_y","btm_back_y","front_center_x","top_front_center_y","btm_front_center_y","PI","line","triangle","steer","setSpeed","max_spee","Math","cos","sin","tan","add","dont_crash","track","targetX","targetY","dist2goal","undefined","i","deltaX","deltaY","heading","car2goal","normalize","thetaError","angleBetween","noFill","radius","circle","getCarState","pidSketchFunction","pidState","sketchState","setSketchState","W","canvasWidth","H","canvasHeight","car","carLength","carColor","controlIndex","mousePressed","waypoint","mouseX","mouseY","index","waypoints","prev","setup","canvas","createCanvas","background","draw","forEach","point","text","hasControlInputs","controls","carSpeed","keyPressed","keyCode","UP_ARROW","key","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","initialState","initialSketchState","useState","state","setState","isLoading","setIsLoading","canvas_ref","useRef","process","postData","axios","payload","data","useEffect","my_p5","remove","className","type","width","height","ref","style","onClick","getBangBangPIDControls","disabled","value","setValue","min","max","step","onInput","e","target","JSON","stringify","window"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-index-jsx-924342ee797618d6649c.js","mappings":"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","sources":["webpack://controls-visualizer/./src/carVisualizer/car.js","webpack://controls-visualizer/./src/carVisualizer/carManager.js","webpack://controls-visualizer/./src/components/ui/tabs/index.jsx","webpack://controls-visualizer/./src/components/tutorial/tutorialText.jsx","webpack://controls-visualizer/./src/customhooks/useCanvasSize/index.jsx","webpack://controls-visualizer/./src/components/tutorial/index.jsx","webpack://controls-visualizer/./src/components/tutorial/tutorialSketch.js","webpack://controls-visualizer/./src/components/controlsAlgorithms/bangbang/bangbangSketch.js","webpack://controls-visualizer/./src/components/controlsAlgorithms/bangbang/index.jsx","webpack://controls-visualizer/./src/components/controlsAlgorithms/optimalControl/optimalControlSketch.js","webpack://controls-visualizer/./src/components/controlsAlgorithms/optimalControl/index.jsx","webpack://controls-visualizer/./src/components/controlsAlgorithms/index.jsx","webpack://controls-visualizer/./src/components/mappingAlgorithms/bfs/bfsSketch.js","webpack://controls-visualizer/./src/components/mappingAlgorithms/bfs/axiosHelpers.js","webpack://controls-visualizer/./src/components/mappingAlgorithms/bfs/helpers.jsx","webpack://controls-visualizer/./src/components/mappingAlgorithms/bfs/index.jsx","webpack://controls-visualizer/./src/components/mappingAlgorithms/rrt/rrtSketch.js","webpack://controls-visualizer/./src/components/mappingAlgorithms/rrt/axiosHelpers.js","webpack://controls-visualizer/./src/components/mappingAlgorithms/rrt/helpers.jsx","webpack://controls-visualizer/./src/components/mappingAlgorithms/rrt/index.jsx","webpack://controls-visualizer/./src/components/mappingAlgorithms/index.jsx","webpack://controls-visualizer/./src/components/mappingAndControls/bangbangRRT/bangBangRRTSketch.js","webpack://controls-visualizer/./src/components/mappingAndControls/bangbangRRT/axiosHelpers.js","webpack://controls-visualizer/./src/components/mappingAndControls/bangbangRRT/helpers.jsx","webpack://controls-visualizer/./src/components/mappingAndControls/bangbangRRT/index.jsx","webpack://controls-visualizer/./src/components/mappingAndControls/index.jsx","webpack://controls-visualizer/./src/components/documentation/index.jsx","webpack://controls-visualizer/./src/pages/index.jsx"],"sourcesContent":["class Car {\n  // Instance variables\n  speed = 0; // Car scalar speed\n  phi = 0; // Wheel angle\n\n  max_steer = 0.5; // Wheel rotation limit\n  max_speed = 50; // Arbitrary choice for max car speed\n\n  theta_dot = 0; // Rate of change of orientation\n\n  constructor(x_, y_, theta_, phi_, length, color, car_ref, p5) {\n    // Location vector\n    this.loc = p5.createVector(x_, y_);\n    // Velocity vector\n    this.vel = p5.createVector(1, 1);\n    // Starting angle (0 = right, pi/2 = down, pi = left, 3pi/2 = up)\n    this.theta = theta_;\n    this.p5 = p5; // utilize p5 instance passed in to car object\n    // Car dimensions\n    this.car_len = length;\n    this.car_wid = this.car_len / 2.5;\n    this.tyre_wid = this.car_wid / 7;\n    this.tyre_len = this.car_len / 6.6;\n    this.color = color;\n    this.car_ref = car_ref;\n    this.phi = phi_;\n    this.shouldDrawImpossibleRegion = false;\n  }\n  /**\n   * A function that manages running the car. Both displays the car and runs it\n   * thru the dynamics\n   */\n  run() {\n    this.display();\n    this.move();\n    if (this.car_ref) {\n      this.car_ref.current = {\n        x: this.loc.x,\n        y: this.loc.y,\n        theta: this.theta,\n        phi: this.phi,\n      };\n    }\n  }\n\n  /**\n   * A function to draw the car onto the screen with the correct position and\n   * orientation\n   */\n  display() {\n    this.p5.push();\n    this.p5.translate(this.loc.x, this.loc.y); // Move to ref frame of the car (car center is now <0, 0>)\n    this.p5.rotate(this.theta); // Rotate reference frame to match car orientation\n\n    this.draw_car_body(); // draw main car body + back wheels\n    this.draw_front_wheels(); // draw fron wheels angled by (phi)\n    this.p5.pop();\n  }\n\n  /**\n   * A Helper function to draw the body of the car\n   */\n  draw_car_body() {\n    if (this.shouldDrawImpossibleRegion) this.drawImpossibleRegion();\n    // Car body\n    this.p5.stroke(0);\n    this.p5.strokeWeight(2);\n    this.p5.fill(this.color);\n    let top_x = -this.car_len / 2;\n    let top_y = -this.car_wid / 2;\n    this.p5.rect(top_x, top_y, this.car_len, this.car_wid, 10); // car body\n\n    // Back Wheels\n    this.p5.fill(0);\n    this.p5.noStroke();\n    let back_x = -this.car_len / 2 + this.tyre_len / 3;\n    let top_back_y = -this.car_wid / 2 + 0.5 * this.tyre_wid;\n    let btm_back_y = this.car_wid / 2 - 1.5 * this.tyre_wid;\n    this.p5.rect(back_x, top_back_y, this.tyre_len, this.tyre_wid, 5);\n    this.p5.rect(back_x, btm_back_y, this.tyre_len, this.tyre_wid, 5);\n  }\n\n  /**\n   * A Helper function to draw the front wheels (with the correct phi angle)\n   */\n  draw_front_wheels() {\n    this.p5.noStroke();\n    this.p5.fill(0);\n\n    let front_center_x =\n      this.car_len / 2 - this.tyre_len / 2 - this.tyre_len / 3;\n    let top_front_center_y = -this.car_wid / 2 + this.tyre_wid;\n    let btm_front_center_y = this.car_wid / 2 - this.tyre_wid;\n\n    // Front Left wheel\n    this.p5.push();\n    this.p5.translate(front_center_x, top_front_center_y);\n    this.p5.rotate(this.phi);\n    this.p5.rect(\n      -this.tyre_len / 2,\n      -this.tyre_wid / 2,\n      this.tyre_len,\n      this.tyre_wid,\n      5\n    );\n    this.p5.pop();\n\n    // Fron right wheel\n    this.p5.push();\n    this.p5.translate(front_center_x, btm_front_center_y);\n    this.p5.rotate(this.phi);\n    this.p5.rect(\n      -this.tyre_len / 2,\n      -this.tyre_wid / 2,\n      this.tyre_len,\n      this.tyre_wid,\n      5\n    );\n    this.p5.pop();\n\n    // Draw a vector to make it clear what direction the car is pointing\n    this.p5.push();\n    this.p5.stroke(220);\n    this.p5.strokeWeight(1);\n    this.p5.fill(180);\n    this.p5.rotate(-this.p5.PI / 2);\n    this.p5.line(0, 0, 0, this.car_len / 2);\n    this.p5.translate(0, this.car_len / 2);\n    this.p5.triangle(-5, 0, 0, 5, 5, 0);\n    this.p5.pop();\n  }\n\n  /**\n   *\n   * @param {*} u The new steering angle of the car\n   */\n  steer(phi) {\n    if (phi > this.max_steer) this.phi = this.max_steer;\n    else if (phi < -this.max_steer) this.phi = -this.max_steer;\n    else this.phi = phi;\n  }\n\n  /**\n   *\n   * @param {*} speed The new speed of the car\n   */\n  setSpeed(speed) {\n    if (speed > this.max_speed) this.speed = this.max_speed;\n    else if (speed < -this.max_speed) this.speed = -this.max_spee;\n    else this.speed = speed;\n  }\n  /**\n   * The dynamics of the car are encoded in this function. A call to move \"steps\"\n   * the car forward in time once based on its current position, orientation,\n   * and steering angle (phi)\n   */\n  move() {\n    // Update velocity, theta and location\n\n    this.vel.x = this.speed * Math.cos(this.theta);\n    this.vel.y = this.speed * Math.sin(this.theta);\n    this.theta_dot = (this.speed * Math.tan(this.phi)) / this.car_len;\n    this.theta += this.theta_dot;\n    this.loc.add(this.vel);\n  }\n\n  // Width and height (600) are hard-coded magic numbers atm.\n  dont_crash() {\n    if (this.loc.x < -this.car_len * 2) {\n      this.loc.x = 0;\n      this.speed = 0;\n    }\n\n    if (this.loc.x > 800) {\n      this.loc.x = 600;\n      this.speed = 0;\n    }\n\n    if (this.loc.y < -50) {\n      this.loc.y = 0;\n      this.speed = 0;\n    }\n\n    if (this.loc.y > 700) {\n      this.loc.y = 600;\n      this.speed = 0;\n    }\n  }\n\n  track(targetX, targetY, dist2goal) {\n    if (dist2goal == null || dist2goal == undefined) {\n      dist2goal = 10;\n    }\n    for (let i = 0; i < 20; i++) {\n      const deltaX = targetX - this.loc.x;\n      const deltaY = targetY - this.loc.y;\n\n      const heading = this.p5.createVector(\n        this.p5.cos(this.theta),\n        this.p5.sin(this.theta)\n      );\n      const car2goal = this.p5.createVector(deltaX, deltaY).normalize();\n\n      const thetaError = heading.angleBetween(car2goal);\n\n      if (thetaError > 0) {\n        this.phi = this.max_steer;\n      } else if (thetaError < 0) {\n        this.phi = -this.max_steer;\n      } else {\n        this.phi = 0;\n      }\n\n      this.speed = 0.1;\n      // if (Math.abs(deltaX) < dist2goal && Math.abs(deltaY) < dist2goal) {\n      //   this.speed = 0;\n      // } else {\n      //   this.speed = 0.1;\n      // }\n      this.move();\n    }\n  }\n\n  drawImpossibleRegion() {\n    this.p5.noFill();\n    this.p5.stroke('red');\n    const radius = this.car_len / this.p5.tan(this.max_steer);\n    this.p5.circle(0, radius, radius * 2);\n    this.p5.circle(0, -radius, radius * 2);\n  }\n\n  getCarState() {\n    return { x: this.loc.x, y: this.loc.y, theta: this.theta };\n  }\n}\n\nexport default Car;\n","export default class CarManager {\n  constructor(pCar, pSketchState, pP5) {\n    this.car = pCar;\n    this.p5 = pP5;\n    this.controlIndex = 0;\n    this.sketchState = pSketchState;\n    this.currentSteer = 0;\n    this.currentPathIndex = 0;\n    this.paths = null;\n    this.reachedGoal = false;\n    this.pidWayPointIndex = 0;\n    this.pidDubinsWayPointIndex = 0;\n\n    // Vanilla position way points\n    this.waypoints = [];\n    this.waypointsIndex = 0;\n  }\n\n  step() {\n    if (!this.paths) {\n      this.car.display();\n      return;\n    }\n    if (this.currentPathIndex > this.paths.length - 1) {\n      this.car.display();\n      this.car.setSpeed(0);\n      this.car.steer(0);\n      this.reachedGoal = true;\n      return;\n    }\n\n    // Set the initial steering for first set of steps\n    if (this.currentPathIndex === 0 && this.controlIndex === 0) {\n      this.setSteeringForNewPath(this.paths[this.currentPathIndex]);\n    }\n    const path = this.paths[this.currentPathIndex];\n    // Second to last step should be handled specially because of partial step size\n    if (this.controlIndex == Math.floor(path.numSteps)) {\n      //   Scale speed down to a fraction of the car speed for the final time step\n      const newSpeed =\n        this.sketchState.carSpeed * (path.numSteps - this.controlIndex);\n      this.car.setSpeed(newSpeed);\n      this.car.steer(this.currentSteer);\n      this.controlIndex++;\n    }\n    // The \"normal\" step\n    else if (this.controlIndex < Math.floor(path.numSteps)) {\n      this.car.setSpeed(this.sketchState.carSpeed);\n      this.car.steer(this.currentSteer);\n      this.controlIndex++;\n    }\n    // Move to next path in Paths if there is any\n    else {\n      this.controlIndex = 0;\n      this.currentPathIndex++;\n      this.setSteeringForNewPath(this.paths[this.currentPathIndex]);\n    }\n\n    this.car.run();\n  }\n\n  /**\n   *\n   * @param {*} pPaths a list of the form [{\n   *  direction: \"LEFT\" | \"RIGHT\" | \"STRAIGHT\",\n   * numSteps: float\n   *\n   * }]\n   */\n  setPaths(pPaths) {\n    this.paths = pPaths;\n  }\n  /**\n   *\n   * @param {*} path a dictionary of the form {\n   *  direction: \"LEFT\" | \"RIGHT\" | \"STRAIGHT\",\n   * numSteps: float\n   *\n   * }\n   */\n  setSteeringForNewPath(path) {\n    if (!path) return;\n    let steering = 0; // go straight\n    if (path.direction === 'LEFT') {\n      steering = this.car.max_steer;\n    } else if (path.direction === 'RIGHT') {\n      steering = -this.car.max_steer;\n    } else if (path.direction === 'STRAIGHT') {\n      steering = 0;\n    }\n    this.currentSteer = steering;\n  }\n\n  dist(p1, p2) {\n    return Math.sqrt(\n      (p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y)\n    );\n  }\n  pidTrackPoseWayPoints() {\n    const dist2goal = 5;\n    if (this.pidWayPointIndex >= this.sketchState.poseWayPoints.length) {\n      this.car.display();\n      this.car.setSpeed(0);\n      this.car.steer(0);\n      this.reachedGoal = true;\n      return;\n    }\n    const curWayPoint = this.sketchState.poseWayPoints[this.pidWayPointIndex];\n    this.car.track(curWayPoint.x, curWayPoint.y, dist2goal);\n    const dist = this.dist(curWayPoint, this.car.loc);\n\n    if (dist <= dist2goal) {\n      this.pidWayPointIndex++;\n    }\n    this.car.run();\n  }\n  pidTrackDubinsWayPoints() {\n    const dist2goal = 2;\n    if (\n      this.pidDubinsWayPointIndex >= this.sketchState.positionWayPoints.length\n    ) {\n      this.car.display();\n      this.car.setSpeed(0);\n      this.car.steer(0);\n      this.reachedGoal = true;\n      return;\n    }\n    const curWayPoint =\n      this.sketchState.positionWayPoints[this.pidDubinsWayPointIndex];\n    this.car.track(curWayPoint.x, curWayPoint.y, dist2goal);\n    const dist = this.dist(curWayPoint, this.car.loc);\n    if (dist <= dist2goal) {\n      this.pidDubinsWayPointIndex++;\n    }\n    this.car.run();\n  }\n\n  pidTrackPositionWayPoints(pwaypoints) {\n    const dist2goal = 10;\n    if (this.waypointsIndex >= pwaypoints.length) {\n      this.car.display();\n      this.car.setSpeed(0);\n      this.car.steer(0);\n      this.reachedGoal = true;\n      return;\n    }\n    const curWayPoint = pwaypoints[this.waypointsIndex];\n    this.car.track(curWayPoint.x, curWayPoint.y, dist2goal);\n    const dist = this.dist(curWayPoint, this.car.loc);\n\n    if (dist <= dist2goal) {\n      this.waypointsIndex++;\n    }\n    this.car.run();\n  }\n}\n","import React, { useState } from 'react';\n\nfunction selectTab(selectedTabIndex, tabValues) {\n  const newTabValues = [...tabValues];\n  newTabValues.forEach((val) => (val.isSelected = false));\n  newTabValues[selectedTabIndex].isSelected = true;\n  return newTabValues;\n}\n\nfunction Tab({ text, isSelected, setState, index }) {\n  return (\n    <div\n      onClick={() => {\n        setState((prev) => {\n          return {\n            selectedIndex: index,\n            values: selectTab(index, prev.values),\n          };\n        });\n      }}\n      className={`${\n        isSelected\n          ? 'bg-[#d5d5d5] hover:bg-[#d5d5d5] text-black'\n          : 'bg-[#747474] hover:bg-[#3e3e3f]'\n      } text-xs sm:text-base lg:text-lg px-2 lg:px-8 mx-1 lg:mx-3 py-1 lg:py-2 rounded-xl cursor-pointer flex items-center justify-center text-center`}\n    >\n      {text}\n    </div>\n  );\n}\n\nexport default function Tabs({ tabValues, setTabValues }) {\n  return (\n    <div className=\"flex sm:justify-center w-full overflow-x-auto py-1\">\n      {tabValues.values.map((tabValue, index) => {\n        return (\n          <Tab\n            key={index}\n            text={tabValue.text}\n            isSelected={tabValue.isSelected}\n            setState={setTabValues}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react'\nexport default function TutorialText() {\n    return <div className=\"flex flex-col\">\n\n        <div>\n            <h1 className=\"text-5xl font-bold text-gray-800 p-6\">\n                Welcome! 👀</h1>\n        </div>\n\n        <div>\n            <h2 className=\"text-xl text-gray-800 p-6\">\n                Use the <span className=\"font-bold underline\">WASD</span> keys to drive the car around!\n                You are driving a <a href=\"http://planning.cs.uiuc.edu/node658.html\" target=\"_blank\" class=\"text-blue-600 \">\n                Dubin's Car 🚗</a>!\n            </h2>\n        </div>\n\n\n        <div>\n            <h2 className=\"text-xl text-gray-800 p-6\">\n                <span className=\"font-bold underline\">Press \"T\"</span> to see the car's turning circles. \n                The dynamics of this car are fully defined, which makes it easier to drive autonomously.\n            </h2>\n        </div>\n\n        <div>\n            <h2 className=\"text-xl text-gray-800 p-6\">\n                When you're ready, click on the next tab to play with control algorithms.\n                If you'd like to learn more about anything we show on this website, please look at our documentation. \n            </h2>\n        </div>\n\n       \n\n\n    </div>\n}\n\n\n","import React, { useState, useEffect } from 'react';\nconst LARGE_SCREEN = 1024;\nexport default function useCanvasSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: 300,\n    height: 300,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set canvas width/height based on the window size to the state\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const width =\n        windowWidth < LARGE_SCREEN\n          ? windowWidth * 0.8 - 25\n          : windowWidth / 2 - 100;\n\n      const height =\n        windowWidth < LARGE_SCREEN ? windowHeight * 0.5 : windowHeight - 300;\n      setWindowSize({\n        width,\n        height,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport p5 from 'p5';\nimport tutorialSketch from './tutorialSketch';\nimport TutorialText from './tutorialText';\nimport useCanvasSize from '../../customhooks/useCanvasSize';\n\nconst initialSketchState = { canvasWidth: 800, canvasHeight: 800 };\n\n\nexport default function Tutorial() {\n  const [sketchState, setSketchState] = useState(initialSketchState);\n  const canvasSize = useCanvasSize();\n\n  //   Resize the p5 canvas when the screen size changes\n  useEffect(() => {\n    const {width, height} = canvasSize\n    setSketchState((prev) => ({\n      ...prev,\n      canvasWidth: width,\n      canvasHeight: height,\n    }));\n  }, [canvasSize]);\n  const sketchRef = useRef();\n  useEffect(() => {\n    let myp5 = new p5(tutorialSketch(sketchState), sketchRef.current);\n\n    // Return a function that deletes the canvas so we don't have duplicates\n    return () => {\n      myp5.remove();\n    };\n  });\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 \">\n      {/* <h1 className=\"text-black text-lg\">{JSON.stringify(windowSize)}</h1> */}\n      <TutorialText />\n      <div\n        className=\"cursor-pointer p-6\"\n        ref={sketchRef}\n        style={{\n          width: sketchState.canvasWidth,\n          height: sketchState.canvasHeight,\n        }}\n      ></div>\n    </div>\n  );\n}\n","import Car from '../../carVisualizer/car';\nexport default function tutorialSketch(sketchState) {\n  return (p5) => {\n    const W = sketchState.canvasWidth;\n    const H = sketchState.canvasHeight;\n    // Define some colors\n    const green = p5.color(0, 255, 0);\n    const blue = p5.color(0, 50, 255);\n    const red = p5.color(255, 50, 10);\n    const carLenH = Math.max(30, H/9)\n    const carLenW = Math.max(30, W/9)\n    const carLen = Math.min(carLenH, carLenW)\n    const car = new Car(W / 2, H / 2, 0, 0, carLen, 'red', null, p5);\n    function setup() {\n      const canvas = p5.createCanvas(W, H);\n      p5.background('#747474');\n    }\n\n    function draw() {\n      p5.background('#747474');\n      p5.translate(0, H); //moves the origin to bottom left\n      p5.scale(1, -1); //flips the y values so y increases \"up\"\n      car.run();\n    }\n\n    function handleKeyPressed() {\n      if (p5.keyCode === p5.UP_ARROW || p5.key === 'w')\n        car.setSpeed(3);\n      else if (p5.keyCode === p5.DOWN_ARROW || p5.key === 's')\n        car.setSpeed(0);\n      else if (p5.keyCode === p5.LEFT_ARROW || p5.key === 'a')\n        car.steer(car.phi + car.max_steer);\n      else if (p5.keyCode === p5.RIGHT_ARROW || p5.key === 'd')\n        car.steer(car.phi - car.max_steer);\n      else if (p5.key === 't') {\n        car.shouldDrawImpossibleRegion = !car.shouldDrawImpossibleRegion;\n      }\n    }\n\n    p5.setup = setup;\n    p5.draw = draw;\n    p5.keyPressed = handleKeyPressed;\n  };\n}\n","import Car from '../../../carVisualizer/car';\nimport CarManager from '../../../carVisualizer/carManager';\nexport default function bangbangSketch(sketchState, setSketchState, car_ref) {\n  return (p5) => {\n    const W = sketchState.canvasWidth;\n    const H = sketchState.canvasHeight;\n    // Define some colors\n    const green = p5.color(0, 255, 0);\n    const blue = p5.color(0, 50, 255);\n    const red = p5.color(255, 50, 10);\n\n    let car = new Car(\n      car_ref.current.x,\n      car_ref.current.y,\n      car_ref.current.theta,\n      car_ref.current.phi,\n      sketchState.carLength,\n      sketchState.carColor,\n      car_ref,\n      p5\n    );\n    car.setSpeed(0);\n\n    const carManager = new CarManager(car, sketchState, p5);\n    function setup() {\n      const canvas = p5.createCanvas(W, H);\n      canvas.mousePressed(mousePressed);\n      p5.background('#747474');\n    }\n\n    // Helper Functions\n    function writeText(text, x, y) {\n      p5.push();\n      p5.scale(1, -1);\n      p5.textSize(12);\n      p5.fill(0)\n      p5.text(text, x, -y);\n      p5.pop();\n    }\n    function drawPositionWayPoints() {\n      p5.fill('#baff29');\n      p5.noStroke();\n      sketchState.positionWayPoints.forEach((point) => {\n        p5.circle(point.x, point.y, sketchState.carLength * 0.5);\n        writeText(\n          point.index,\n          point.x - sketchState.carLength * 0.05,\n          point.y - sketchState.carLength * 0.01\n        );\n      });\n    }\n\n    // P5 required Functions\n    function draw() {\n      p5.background('#747474');\n      p5.translate(0, H); //moves the origin to bottom left\n      p5.scale(1, -1); //flips the y values so y increases \"up\"\n      drawPositionWayPoints();\n      if (\n        sketchState &&\n        sketchState.positionWayPoints &&\n        sketchState.controlMode == 'pid'\n      ) {\n        carManager.pidTrackPositionWayPoints(sketchState.positionWayPoints);\n      } else {\n        //     car = new Car(0,0,0, p5)\n        //     controlIndex = 0\n        car.run();\n      }\n      if (carManager.reachedGoal) {\n        setSketchState((prev) => ({ ...prev, controlMode: null }));\n      }\n    }\n\n    function handleKeyPressed() {\n      if (p5.keyCode === p5.UP_ARROW || p5.key === 'w') car.setSpeed(3);\n      else if (p5.keyCode === p5.DOWN_ARROW || p5.key === 's') car.setSpeed(0);\n      else if (p5.keyCode === p5.LEFT_ARROW || p5.key === 'a')\n        car.steer(car.phi + car.max_steer);\n      else if (p5.keyCode === p5.RIGHT_ARROW || p5.key === 'd')\n        car.steer(car.phi - car.max_steer);\n      else if (p5.key === 't') {\n        car.shouldDrawImpossibleRegion = !car.shouldDrawImpossibleRegion;\n      }\n    }\n\n    function mousePressed() {\n      // Set Waypoint!\n      const waypoint = {\n        x: p5.mouseX,\n        y: H - p5.mouseY,\n        index: sketchState.positionWayPoints.length + 1\n      };\n      setSketchState((prev) => ({\n        ...prev,\n        positionWayPoints: [...prev.positionWayPoints, waypoint],\n      }));\n    }\n\n    p5.setup = setup;\n    p5.draw = draw;\n    p5.keyPressed = handleKeyPressed;\n  };\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport p5 from 'p5';\nimport bangbangSketch from './bangbangSketch';\n// import TutorialText from './tutorialText';\nimport useCanvasSize from '../../../customhooks/useCanvasSize';\n\nconst initialSketchState = {\n  carLength: 50,\n  carSpeed: 1,\n  carColor: '#ff0000',\n  positionWayPoints: [],\n  canvasWidth: 600,\n  canvasHeight: 600,\n  controlMode: null,\n};\n\nexport default function BangBang() {\n  const [sketchState, setSketchState] = useState(initialSketchState);\n  const canvasSize = useCanvasSize();\n  const sketchRef = useRef();\n  const car_ref = useRef({\n    x: sketchState.canvasWidth / 2,\n    y: sketchState.canvasHeight / 2,\n    theta: 0,\n    phi: 0,\n  });\n  //   Resize the p5 canvas when the screen size changes\n  useEffect(() => {\n    const { width, height } = canvasSize;\n    setSketchState((prev) => ({\n      ...prev,\n      canvasWidth: width,\n      canvasHeight: height,\n    }));\n  }, [canvasSize]);\n  useEffect(() => {\n    let myp5 = new p5(\n      bangbangSketch(sketchState, setSketchState, car_ref),\n      sketchRef.current\n    );\n\n    // Return a function that deletes the canvas so we don't have duplicates\n    return () => {\n      myp5.remove();\n    };\n  }, [sketchState]);\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 \">\n      {/* <h1 className=\"text-black text-lg\">{JSON.stringify(windowSize)}</h1> */}\n      <div className=\" flex flex-col items-center\">\n\n        <div className=\"flex flex-col\">\n\n          <div>\n            <h1 className=\"text-5xl font-bold text-gray-800 p-6\">\n              Bang Bang Controls</h1>\n          </div>\n\n          <div>\n            <h2 className=\"text-l text-gray-800 p-6\">\n              <span className=\"font-bold underline\">Click on the screen</span> to set target points.\n            </h2>\n          </div>\n\n          <div>\n            <h2 className=\"text-l text-gray-800 p-6\">\n              We want the car to hit each of these points autonomously. We implemented three ways of doing this,\n              which you can select from the drop-down menu above. \n              When you've set the points you want \n              and click the <span className=\"font-bold underline\"> track waypoints </span> button below.\n            </h2>\n          </div>\n\n          <div>\n            <h2 className=\"text-l text-gray-800 p-6\">\n              What do you notice? Can you find situations where the car cannot hit one of the points?\n              (Hint: use the <span className=\"font-bold underline\">\"T\" button</span> and see what happens when you put a point inside a turning cirlce!).\n            </h2>\n          </div>\n\n\n        </div>\n\n\n        <div className=\"flex space-x-3\">\n          <button\n            className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:hover:ring-0 disabled:cursor-not-allowed\"\n            disabled={sketchState.positionWayPoints.length === 0}\n            onClick={() =>\n              setSketchState((prev) => ({\n                ...prev,\n                controlMode: 'pid',\n              }))\n            }\n          >\n            Track waypoints!\n          </button>\n          <button\n            className=\"bg-red-300 text-black px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-red-400 disabled:cursor-not-allowed\"\n            onClick={() =>\n              setSketchState((prev) => ({\n                ...prev,\n                positionWayPoints: [],\n              }))\n            }\n          >\n            Clear Waypoints!\n          </button>\n        </div>\n      </div>\n      <div className='flex justify-center items-center'>\n        <div\n          className=\"cursor-pointer p-6 mb-20 lg:mb-0\"\n          ref={sketchRef}\n          style={{\n            width: sketchState.canvasWidth,\n            height: sketchState.canvasHeight,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n","import Car from '../../../carVisualizer/car';\nimport CarManager from '../../../carVisualizer/carManager';\nexport default function optimalControlSketch(\n  dubinsState,\n  sketchState,\n  setSketchState,\n  car_ref\n) {\n  return (p5) => {\n    // Define some sketch constants\n    const W = sketchState.canvasWidth;\n    const H = sketchState.canvasHeight;\n    // Define some colors\n    const green = p5.color(0, 255, 0);\n    const blue = p5.color(0, 50, 255);\n    const red = p5.color(255, 50, 10);\n    let car = new Car(\n      car_ref.current.x,\n      car_ref.current.y,\n      car_ref.current.theta,\n      car_ref.current.phi,\n      sketchState.carLength,\n      sketchState.carColor,\n      car_ref,\n      p5\n    );\n\n    car.setSpeed(0);\n\n    const carManager = new CarManager(car, sketchState, p5);\n    if (dubinsState && dubinsState.paths) {\n      carManager.setPaths(dubinsState.paths);\n    }\n    // SETUP\n    function setup() {\n      const canvas = p5.createCanvas(W, H);\n      //   Highly Important, p5js is a left handed system, so translate\n      //   the origin to the bottom left corner and flip the y axis\n      //   However, this will still result in the angles facing exactly 180 degrees incorrectly\n      // when switching between the two systems, so before sending any angles to the back end, rotate them by 180\n      p5.translate(0, H); //moves the origin to bottom left\n      p5.scale(1, -1); //flips the y values so y increases \"up\"\n\n      p5.background(100);\n      canvas.mousePressed(mousePressed);\n    }\n\n    function drawPoseWayPoints() {\n      sketchState.poseWayPoints.forEach((pose) => {\n        const c = new Car(\n          pose.x,\n          pose.y,\n          pose.theta,\n          0,\n          sketchState.carLength,\n          'green',\n          null,\n          p5\n        );\n        c.display();\n        writeText(pose.index, pose.x, pose.y);\n        if (pose.selected) {\n          p5.noFill();\n          p5.stroke(255, 240, 254);\n          p5.strokeWeight(1);\n          p5.circle(pose.x, pose.y, sketchState.carLength + 5);\n        }\n      });\n    }\n\n    function writeText(text, x, y) {\n      p5.push();\n      p5.scale(1, -1);\n      p5.textSize(12);\n      p5.text(text, x, -y);\n      p5.pop();\n    }\n    function drawPositionWayPoints() {\n      sketchState.positionWayPoints.forEach((point) => {\n        p5.circle(point.x, point.y, sketchState.carLength * 0.5);\n        writeText(\n          point.index,\n          point.x - sketchState.carLength * 0.05,\n          point.y - sketchState.carLength * 0.01\n        );\n      });\n    }\n\n    function mousePressed() {\n      // Set Waypoint!\n      const waypoint = {\n        x: p5.mouseX,\n        y: H - p5.mouseY,\n        theta: p5.radians(sketchState.selectedCarTheta),\n        index: sketchState.poseWayPoints.length + 1,\n        selected: true,\n      };\n      //   deselect previous poseWayPoints\n      const deselectedWayPoints = sketchState.poseWayPoints.map((pose) => ({\n        ...pose,\n        selected: false,\n      }));\n      setSketchState((prev) => ({\n        ...prev,\n        poseWayPoints: [...deselectedWayPoints, waypoint],\n      }));\n    }\n\n    function draw() {\n      p5.background(100);\n      p5.translate(0, H); //moves the origin to bottom left\n      p5.scale(1, -1); //flips the y values so y increases \"up\"\n      drawPositionWayPoints();\n      drawPoseWayPoints();\n      //  !!!! Animate thru controls\n      //   if (\n      //     sketchState.hasControlInputs &&\n      //     controlIndex < dubinsState.controls.length - 1\n      //   ) {\n      //     car.setSpeed(sketchState.carSpeed);\n      //     car.steer(dubinsState.controls[controlIndex]);\n      //     controlIndex++;\n      //     car.run();\n      //     if (controlIndex == dubinsState.controls.length - 1) {\n      //       car.setSpeed(0);\n      //       setSketchState((prev) => ({ ...prev, hasControlInputs: false }));\n      //     }\n      //   }\n\n      // Use the car manager class to run thru a set of dubins paths\n      if (\n        dubinsState &&\n        dubinsState.paths &&\n        !carManager.reachedGoal &&\n        sketchState.controlMode == 'dubins'\n      ) {\n        carManager.step();\n      } else {\n        //     car = new Car(0,0,0, p5)\n        //     controlIndex = 0\n        car.run();\n      }\n      if (carManager.reachedGoal) {\n        setSketchState((prev) => ({ ...prev, controlMode: null }));\n      }\n    }\n\n    function keyPressed() {\n      if (p5.keyCode === p5.UP_ARROW || p5.key === 'w')\n        car.setSpeed(car.speed + 1);\n      else if (p5.keyCode === p5.DOWN_ARROW || p5.key === 's')\n        car.setSpeed(car.speed - 1);\n      else if (p5.keyCode === p5.LEFT_ARROW || p5.key === 'a')\n        car.steer(car.phi + 0.5);\n      else if (p5.keyCode === p5.RIGHT_ARROW || p5.key === 'd')\n        car.steer(car.phi - 0.5);\n      else if (p5.key === 't') {\n        car.shouldDrawImpossibleRegion = !car.shouldDrawImpossibleRegion;\n      }\n    }\n\n    p5.setup = setup;\n    p5.draw = draw;\n    p5.keyPressed = keyPressed;\n  };\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport p5 from 'p5';\nimport ReactLoading from 'react-loading';\nimport axios from 'axios';\nimport Slider from '../../ui/slider';\nimport optimalControlsSketch from './optimalControlSketch';\nimport useCanvasSize from '../../../customhooks/useCanvasSize';\nconst initialState = {\n  waypoints: [],\n  controls: [],\n};\n\nconst initialSketchState = {\n  carLength: 44,\n  carSpeed: 1,\n  carColor: '#ff0000',\n  selectedCarTheta: 0,\n  poseWayPoints: [],\n  positionWayPoints: [],\n  canvasWidth: 600,\n  canvasHeight: 600,\n  controlMode: null,\n};\nfunction DubinsPath() {\n  const [state, setState] = useState(initialState);\n  const [sketchState, setSketchState] = useState(initialSketchState);\n  const [isLoading, setIsLoading] = useState(false);\n  const canvasSize = useCanvasSize();\n  const canvas_ref = useRef();\n  const car_ref = useRef({\n    x: sketchState.canvasWidth / 4,\n    y: sketchState.canvasHeight / 4,\n    theta: 0,\n    phi: 0,\n  });\n\n  /*----------------------------------------------------------------------------\n  Send the user defined pose waypoints to the backend to get the control inputs \n  to drive to!\n  --------------------------------------------------------------------------- */\n  async function getDubinsPath() {\n    if (isLoading) return;\n    setIsLoading(true);\n    const url = `${process.env.GATSBY_BACKEND_URL}/dubins_path`;\n\n    const postData = {\n      carLength: sketchState.carLength,\n      carSpeed: sketchState.carSpeed,\n      targetPoses: [\n        {\n          x: car_ref.current.x,\n          y: car_ref.current.y,\n          theta: car_ref.current.theta,\n        },\n        ...sketchState.poseWayPoints,\n      ],\n      ...car_ref.current,\n    };\n    const payload = await axios.post(url, postData);\n    setIsLoading(false);\n    setState(payload.data);\n    setSketchState((prev) => ({\n      ...prev,\n      positionWayPoints: payload.data.waypoints,\n      controlMode: 'null',\n    }));\n  }\n\n  //   Resize the p5 canvas when the screen size changes\n  useEffect(() => {\n    const { width, height } = canvasSize;\n    setSketchState((prev) => ({\n      ...prev,\n      canvasWidth: width,\n      canvasHeight: height,\n    }));\n  }, [canvasSize]);\n\n  //   Manage the p5 sketch\n  useEffect(() => {\n    const my_p5 = new p5(\n      optimalControlsSketch(state, sketchState, setSketchState, car_ref),\n      canvas_ref.current\n    );\n    return () => my_p5.remove();\n  }, [state, sketchState]);\n\n  function handleSelectedCarThetaUpdate(value) {\n    const updatedPoseWaypoints = sketchState.poseWayPoints.map((pose) => {\n      if (pose.selected) {\n        return { ...pose, theta: (value * Math.PI) / 180 };\n      } else {\n        return { ...pose };\n      }\n    });\n    setSketchState((prev) => ({\n      ...prev,\n      selectedCarTheta: value,\n      poseWayPoints: updatedPoseWaypoints,\n    }));\n  }\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2\">\n      {/* Text and Buttons go here */}\n      <div className=\" flex flex-col items-center\">\n        <div className=\"flex flex-col\">\n          <div>\n            <h1 className=\"text-5xl font-bold text-gray-800 p-6\">\n              Optimal Controls\n            </h1>\n          </div>\n\n          <div>\n            <h2 className=\"text-l text-gray-800 p-6\">\n              <span className=\"font-bold underline\">Click on the screen</span>{' '}\n              to set target points, and use the slider to change the orientation\n              of each target.\n            </h2>\n          </div>\n\n          <div>\n            <h2 className=\"text-l text-gray-800 p-6\">\n              Optimal controls enables perfect tracking of points, with both\n              location and orientation! When you've set the points you want,\n              click the{' '}\n              <span className=\"font-bold underline\">\n                {' '}\n                Calculate Dubin's Path{' '}\n              </span>{' '}\n              button, and then the{' '}\n              <span className=\"font-bold underline\">\n                {' '}\n                Run Dubin's Path{' '}\n              </span>{' '}\n              button!\n            </h2>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col items-center justify-center text-black\">\n          <div className=\"flex flex-col items-center justify-center text-lg\">\n            <h1 className=\"text-3xl font-bold\">Customize your waypoints!</h1>\n            <h3>\n              Set the orientation of your waypoint:{' '}\n              {sketchState.selectedCarTheta}\n            </h3>\n            <Slider\n              value={sketchState.selectedCarTheta}\n              setValue={handleSelectedCarThetaUpdate}\n              min={0}\n              max={360}\n              step={1}\n              color={'blue'}\n            />\n            {/* <h1 className=\"text-3xl font-bold\">Customize your car!</h1>\n          <h3>Set the Length of your car: {sketchState.carLength}</h3>\n          <Slider\n            value={sketchState.carLength}\n            setValue={(value) =>\n              setSketchState({ ...sketchState, carLength: value })\n            }\n            min={20}\n            max={100}\n            step={1}\n            color={'blue'}\n          />\n          <h3>Set the Speed of your car: {sketchState.carSpeed}</h3>\n          <Slider\n            value={sketchState.carSpeed}\n            setValue={(value) =>\n              setSketchState({ ...sketchState, carSpeed: value })\n            }\n            min={1}\n            max={sketchState.carLength}\n            step={1}\n            color={'green'}\n          />\n          <h3>Set the Color of your car</h3>\n          <input\n            type=\"color\"\n            value={sketchState.carColor}\n            onInput={(e) =>\n              setSketchState({ ...sketchState, carColor: e.target.value })\n            }\n          /> */}\n          </div>\n\n          <div className=\"flex justify-center items-center space-x-3\">\n            <button\n              className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:cursor-not-allowed\"\n              onClick={() => getDubinsPath()}\n              disabled={isLoading || sketchState.poseWayPoints.length < 1}\n            >\n              Calculate Dubins Path!\n            </button>\n            <button\n              className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:cursor-not-allowed\"\n              onClick={() => {\n                setSketchState((prev) => ({\n                  ...prev,\n                  controlMode: 'dubins',\n                }));\n              }}\n              disabled={isLoading || sketchState.poseWayPoints.length < 1}\n            >\n              Run Dubins Path!\n            </button>\n            <button\n              className=\"bg-red-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-red-400 hover:ring hover:ring-red-400\"\n              onClick={() => {\n                setSketchState({\n                  ...sketchState,\n                  poseWayPoints: [],\n                  positionWayPoints: [],\n                  hasControlInputs: false,\n                });\n\n                setState((prev) => ({ ...prev, waypoints: null, paths: null }));\n              }}\n            >\n              Clear Waypoints (X)\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex justify-center items-center\">\n        {isLoading ? (\n          <div className=\"flex items-center justify-center space-x-3\">\n            <p>\"Waiting for backend to deliver results!\"</p>\n            <ReactLoading\n              type=\"spinningBubbles\"\n              color=\"blue\"\n              width=\"24px\"\n              height=\"24px\"\n            ></ReactLoading>\n          </div>\n        ) : (\n          ''\n        )}\n\n        <div\n          className=\"p-6 mb-20 lg:mb-0\"\n          ref={canvas_ref}\n          style={{\n            width: sketchState.canvasWidth,\n            height: sketchState.canvasHeight,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n\nexport default DubinsPath;\n","import ListBox from '../ui/listbox';\nimport React, { useState, useEffect, useRef } from 'react';\nimport BangBang from './bangbang';\nimport DubinsPath from './optimalControl';\n\nconst CONTROL_ALGORITHM_OPTIONS = [\n  { id: 1, value: 'Bang Bang', unavailable: false },\n  { id: 2, value: 'Optimal Control', unavailable: false },\n  { id: 3, value: 'PID', unavailable: false },\n];\nexport default function ControlAlgorithms() {\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('Bang Bang');\n  return (\n    <div className=\"flex flex-col items-center\">\n      <h1 className='text-xs lg:text-xl text-gray-800 font-bold p-2'>Select a Control Algorithm!</h1>\n      <ListBox\n        options={CONTROL_ALGORITHM_OPTIONS}\n        updateParentSelection={setSelectedAlgorithm}\n      />\n      {\n        {\n          'Bang Bang': <BangBang />,\n          PID: <h1>PID</h1>,\n          'Optimal Control': <DubinsPath/>,\n        }[selectedAlgorithm.value]\n      }\n      \n    </div>\n  );\n}\n","export default function bfsSketchFunction(\n  bfsState,\n  sketchState,\n  setSketchState,\n  menuValue,\n  shouldAnimate\n) {\n  return (p5) => {\n    // Define some sketch constants\n    const W = sketchState.canvasWidth;\n    const H = sketchState.canvasHeight;\n    // Define some colors\n    const green = p5.color(0, 255, 0);\n    const blue = p5.color(0, 50, 255);\n    const red = p5.color(255, 50, 10);\n\n    // RRT Animation values\n    let explorationIndex = 0;\n    let isExplorationComplete = false;\n    let goalPathNodes = [];\n    // Collect the goal path as an array that can be iterated over backwards to\n    // go from start to goal\n    if (bfsState && bfsState.points) {\n      let goalNode = bfsState.points[bfsState.targetNodeIndex];\n      while (goalNode) {\n        goalPathNodes.push(goalNode);\n        goalNode = bfsState.points[goalNode.parentIndex];\n      }\n    }\n    let goalPathDrawingIndex = goalPathNodes.length - 1;\n\n    /**\n     * A Method to draw all of the points in the bfsState object\n     */\n    function drawRRTPoints() {\n      // Draw all of the points in the graph\n      p5.stroke(blue);\n      p5.strokeWeight(2);\n      bfsState.points.forEach((point) => {\n        const { x, y } = point;\n        p5.fill(green);\n        p5.circle(x, y, 3);\n        // connect the current point to its \"parent\" with a line\n        if (point.parentIndex !== -1) {\n          const parent = bfsState.points[point.parentIndex];\n          const { x: parentX, y: parentY } = parent;\n          p5.line(x, y, parentX, parentY);\n        }\n      });\n      // Draw Goal Path\n      const goalNode = bfsState.points[bfsState.targetNodeIndex];\n      let point = goalNode;\n      p5.stroke(green);\n      p5.strokeWeight(3);\n      while (point.parentIndex !== -1) {\n        const parent = bfsState.points[point.parentIndex];\n        const { x: parentX, y: parentY } = parent;\n        p5.line(point.x, point.y, parentX, parentY);\n        point = bfsState.points[point.parentIndex];\n      }\n    }\n\n    function animateRRTExploration() {\n      p5.stroke(blue);\n      p5.strokeWeight(2);\n      const point = bfsState.points[explorationIndex];\n      p5.fill(green);\n      p5.circle(point.x, point.y, 3);\n      if (point.parentIndex !== -1) {\n        const parent = bfsState.points[point.parentIndex];\n        p5.line(point.x, point.y, parent.x, parent.y);\n      }\n\n      if (explorationIndex < bfsState.points.length - 1) explorationIndex++;\n      else {\n        isExplorationComplete = true;\n      }\n    }\n    function animateRRTGoalPath() {\n      if (!isExplorationComplete) return;\n      // Draw Goal Path\n      const point = goalPathNodes[goalPathDrawingIndex];\n\n      p5.stroke(green);\n      p5.strokeWeight(3);\n      const nextNode = goalPathNodes[goalPathDrawingIndex - 1];\n\n      p5.line(point.x, point.y, nextNode.x, nextNode.y);\n      if (goalPathDrawingIndex > 1) {\n        goalPathDrawingIndex--;\n      }\n    }\n\n    /**\n     * A method to draw all of the currently defined obstacles\n     */\n    function drawObstacles() {\n      p5.stroke(red);\n      p5.fill(red);\n      sketchState.obstacles.forEach((obs) => {\n        switch (obs.shape) {\n          case 'rectangle':\n            p5.rect(obs.x, obs.y, obs.w, obs.h);\n            break;\n          case 'circle':\n            p5.circle(obs.x, obs.y, obs.r * 2);\n            break;\n          default:\n        }\n      });\n    }\n\n    /**\n     * A method to draw the start and goal nodes\n     */\n    function drawStartandGoal() {\n      p5.stroke(green);\n      p5.fill(green);\n      const {\n        x: xstart,\n        y: ystart,\n        radius: startRadius,\n      } = sketchState.startPoint;\n      const { x: xgoal, y: ygoal, radius: goalRadius } = sketchState.goalPoint;\n\n      p5.circle(xstart, ystart, startRadius * 2);\n      p5.noStroke();\n      p5.fill(blue);\n      p5.circle(xgoal, ygoal, goalRadius * 2);\n    }\n\n    function handleMouseClicked() {\n      switch (menuValue.value) {\n        case 'Circle':\n          const circle = {\n            shape: 'circle',\n            x: p5.mouseX,\n            y: p5.mouseY,\n            r: sketchState.circle.radius,\n          };\n          setSketchState((prev) => ({\n            ...prev,\n            obstacles: [...prev.obstacles, circle],\n          }));\n          break;\n\n        case 'Rectangle':\n          const rectangle = {\n            shape: 'rectangle',\n            x: p5.mouseX,\n            y: p5.mouseY,\n            w: sketchState.rectangle.width,\n            h: sketchState.rectangle.height,\n          };\n          setSketchState((prev) => ({\n            ...prev,\n            obstacles: [...prev.obstacles, rectangle],\n          }));\n          break;\n\n        case 'Start Node':\n          setSketchState((prev) => ({\n            ...prev,\n            startPoint: { ...prev.startPoint, x: p5.mouseX, y: p5.mouseY },\n          }));\n          break;\n\n        case 'Goal Node':\n          setSketchState((prev) => ({\n            ...prev,\n            goalPoint: { ...prev.goalPoint, x: p5.mouseX, y: p5.mouseY },\n          }));\n          break;\n        default:\n          return;\n      }\n    }\n\n    /**\n     * The setup function for the sketch\n     */\n    function setup() {\n      const canvas = p5.createCanvas(W, H);\n      // p5.frameRate(1)\n      canvas.mousePressed(handleMouseClicked);\n      p5.background('#747474');\n\n      if (sketchState) {\n        // Draw Start and Goal as green\n        drawStartandGoal();\n      }\n      if (bfsState) {\n        // Draw the rrt graph\n        if (!shouldAnimate) {\n          drawRRTPoints();\n        }\n      }\n      //   Draw Obstacles in red\n      drawObstacles();\n    }\n    /**\n     *\n     * The draw function for the sketch\n     */\n\n    function draw() {\n      if (shouldAnimate && bfsState && sketchState) {\n        animateRRTExploration();\n        animateRRTGoalPath();\n      }\n    }\n\n    // Set all of the p5 objects important functions here\n    p5.setup = setup;\n    p5.draw = draw;\n  };\n}\n","function convertObstaclesToBackendFormat(obstacles) {\n  const safetyPadding = 10\n  return obstacles.map((obstacle) => {\n    switch (obstacle.shape) {\n      case 'rectangle':\n        const x_lower = obstacle.x;\n        const y_lower = obstacle.y;\n        const x_upper = x_lower + obstacle.w;\n        const y_upper = y_lower + obstacle.h;\n        return {\n          shape: obstacle.shape,\n          definition: [x_lower, y_lower, x_upper, y_upper],\n        };\n        break;\n\n      case 'circle':\n        return {\n          shape: obstacle.shape,\n          definition: [obstacle.x, obstacle.y, obstacle.r],\n        };\n        break;\n      default:\n        return null;\n    }\n  });\n}\n\nexport function preparePayload(sketchState) {\n  const payload = {};\n  payload['start'] = [sketchState.startPoint.x, sketchState.startPoint.y];\n  payload['goal'] = [sketchState.goalPoint.x, sketchState.goalPoint.y];\n  payload['goalRadius'] = sketchState.goalPoint.radius;\n  payload['width'] = sketchState.canvasWidth;\n  payload['height'] = sketchState.canvasHeight;\n  payload['step_size'] = sketchState.stepSize;\n  payload['obstacles'] = convertObstaclesToBackendFormat(sketchState.obstacles);\n\n  return payload;\n}\n","import React from 'react';\nimport Slider from '../../ui/slider';\nfunction StartNodeSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div className=\"flex flex-col justify-center items-center\">\n      <p>The Start Node Radius is: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction GoalNodeSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div>\n      <p>The Goal Area Radius is: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction CircleRadiusSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div>\n      <p>Set the radius of the circle obstacles: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction StepSizeRadiusSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div>\n      <p>Set the max step size for the RRT algorithm: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction RectangleSizeSlider({\n  width,\n  height,\n  setWidth,\n  setHeight,\n  min,\n  max,\n  step,\n  color,\n}) {\n  return (\n    <div>\n      <h3 className=\"text-lg font-bold\">\n        Set the Dimensions of the Rectangular Obstacles\n      </h3>\n      <p>Set the Width: {width}</p>\n      <Slider\n        value={width}\n        setValue={setWidth}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n      <p>Set the Height: {height}</p>\n      <Slider\n        value={height}\n        setValue={setHeight}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nexport {\n  StartNodeSlider,\n  GoalNodeSlider,\n  RectangleSizeSlider,\n  CircleRadiusSlider,\n  StepSizeRadiusSlider\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport p5 from 'p5';\nimport axios from 'axios';\nimport ListBox from '../../ui/listbox';\nimport bfsSketchFunction from './bfsSketch';\nimport { useDebounce } from '../../../customhooks/debounce';\nimport { preparePayload } from './axiosHelpers';\nimport ReactLoading from 'react-loading';\nimport useCanvasSize from '../../../customhooks/useCanvasSize';\nimport {\n  StartNodeSlider,\n  GoalNodeSlider,\n  RectangleSizeSlider,\n  CircleRadiusSlider,\n  StepSizeRadiusSlider,\n} from './helpers';\n\nconst SHAPES = [\n  { id: 1, value: 'Start Node', unavailable: false },\n  { id: 2, value: 'Goal Node', unavailable: false },\n  { id: 3, value: 'Rectangle', unavailable: false },\n  { id: 4, value: 'Circle', unavailable: false },\n  { id: 5, value: 'Step Size', unavailable: false },\n];\n\nconst initialSketchState = {\n  obstacles: [],\n  startPoint: {\n    x: 100,\n    y: 100,\n    radius: 15,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  goalPoint: {\n    x: 300,\n    y: 100,\n    radius: 30,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  stepSize: 15,\n  circle: {\n    radius: 20,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  rectangle: {\n    height: 20,\n    width: 20,\n    minLength: 1,\n    maxLength: 100,\n    step: 1,\n  },\n  canvasWidth: 600,\n  canvasHeight: 600,\n};\n\n/**\n * The state of the RRT visualization defaults to null, is updated by the user\n * (for things like start, end, and obstacles), submits these to the backend\n * and gets back an object including a list of points\n * state = {\n * goal: array of 2 numbers [x,y],\n * goalRadius: number,\n * obstacles: array of objects, each object has the form {shape: string, definition: array}\n * (i.e. {shape:circle, definition: [0,0,1]}),\n * points: array of objects {x:number, y:number, parentIndex: number},\n *                          targetNodeIndex: number (the index of the point in the rrt at the goal )\n *\n * }\n * @returns\n */\nexport default function BFSVisualization() {\n  /*----------------------------------------------------------------------------\n  SET UP STATE AND REFS\n  --------------------------------------------------------------------------- */\n  const [state, setState] = useState(null);\n  const [sketchState, setSketchState] = useState(initialSketchState);\n  const [menuValue, setMenuValue] = useState('circle');\n  const [isLoading, setIsLoading] = useState(false);\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n  const canvasSize = useCanvasSize();\n  // Chose not to debounce because it caused a size delay in rendering that looked bad when the sketch was redrawn\n  // const debouncedSketchState = useDebounce(sketchState, 250);\n  const ref = useRef();\n\n  //   Resize the p5 canvas when the screen size changes\n  useEffect(() => {\n    const { width, height } = canvasSize;\n    setSketchState((prev) => ({\n      ...prev,\n      canvasWidth: width,\n      canvasHeight: height,\n    }));\n  }, [canvasSize]);\n  /*----------------------------------------------------------------------------\n  GET INITIAL RRT Example MAP WHEN THE PAGE LOADS \n  --------------------------------------------------------------------------- */\n  // useEffect(() => {\n  //   getBFSMap();\n  // }, []);\n\n  /*----------------------------------------------------------------------------\n  Send the user defined map to the backend to solve it!\n  --------------------------------------------------------------------------- */\n  async function getBFSMap() {\n    if (isLoading) return;\n    setIsLoading(true);\n    const url = `${process.env.GATSBY_BACKEND_URL}/bfs`;\n    const payload = await axios.post(url, preparePayload(sketchState));\n    setIsLoading(false);\n    setShouldAnimate(true);\n    setState(payload.data);\n  }\n  /*----------------------------------------------------------------------------\n  THIS IS THE USE EFFECT THAT MANAGES THE P5 RRT SKETCH FUNCTION\n  --------------------------------------------------------------------------- */\n  // This is the effect in charge of managing the p5 sketch\n  useEffect(() => {\n    let myp5 = new p5(\n      bfsSketchFunction(\n        state,\n        sketchState,\n        setSketchState,\n        menuValue,\n        shouldAnimate\n      ),\n      ref.current\n    );\n    setShouldAnimate(false);\n    // Return a function that deletes the canvas so we don't have duplicates\n    return () => {\n      myp5.remove();\n    };\n  }, [state, sketchState, menuValue]);\n\n  /*----------------------------------------------------------------------------\n  HELPER FUNCTIONS TO ORGANIZE OUR SET STATE FOR THE DIFFERENT SLIDERS\n  --------------------------------------------------------------------------- */\n  // Helper Functions to manage state:\n  /**\n   *\n   * @param {*} value The new Start Point Radius being captured by the slider input\n   */\n  function setStartPointRadius(value) {\n    setSketchState((prev) => {\n      return { ...prev, startPoint: { ...prev.startPoint, radius: value } };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new Goal Point Radius being captured by the slider input\n   */\n  function setGoalPointRadius(value) {\n    setSketchState((prev) => {\n      return {\n        ...prev,\n        goalPoint: { ...prev.goalPoint, radius: value },\n      };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new rectangle obstacle width\n   */\n  function setRectangleWidth(value) {\n    setSketchState((prev) => {\n      return { ...prev, rectangle: { ...prev.rectangle, width: value } };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new rectangle obstacle height\n   */\n  function setRectangleHeight(value) {\n    setSketchState((prev) => {\n      return { ...prev, rectangle: { ...prev.rectangle, height: value } };\n    });\n  }\n\n  function setCircleRadius(value) {\n    setSketchState((prev) => {\n      return { ...prev, circle: { ...prev.circle, radius: value } };\n    });\n  }\n\n  function setStepSize(value) {\n    setSketchState((prev) => {\n      return { ...prev, stepSize: value };\n    });\n  }\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 text-black\">\n      {/* IMPORTANT NOTE: REMEMBER TO SET THE WIDTH AND HEIGHT OF THE CANVAS ON THE DIV OR IT WILL HAVE STRANGE SCROLLING BEHAVIOR!!!!!!!!! */}\n      <div className=\"text-black flex flex-col items-center\">\n        {/* Explanation of RRT Goes Here */}\n        <div className=\"p-4\">\n          <div>\n            <h1 className=\"text-5xl font-bold text-gray-800 p-6\">Breadth First Search</h1>\n          </div>\n\n          <div>\n            <h2 className=\"text-l text-gray-800 p-6\">\n              Use the drop down menu and slider below to select things to place,\n              and then{' '}\n              <span className=\"font-bold underline\">click on the screen</span>{' '}\n              to place them!\n            </h2>\n          </div>\n\n          <div>\n            <h2 className=\"text-l text-gray-800 p-6\">\n              Once you've placed a start node and end node, and any obstacles\n              you'd like, then generate the map!\n            </h2>\n          </div>\n        </div>\n        {/* User Input Code Starts Here */}\n        <ListBox options={SHAPES} updateParentSelection={setMenuValue} />\n        <div className=\"flex justify-center items-center space-x-3\">\n          <button\n            className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:cursor-not-allowed\"\n            onClick={() => getBFSMap()}\n            disabled={isLoading}\n          >\n            Generate the RRT Map!\n          </button>\n          <button\n            className=\"bg-red-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-red-400 hover:ring hover:ring-red-400\"\n            onClick={() => setSketchState({ ...sketchState, obstacles: [] })}\n          >\n            Clear Obstacles (X)\n          </button>\n        </div>\n        <div className=\"flex flex-col\">\n          {\n            {\n              'Start Node': (\n                <StartNodeSlider\n                  value={sketchState.startPoint.radius}\n                  setValue={setStartPointRadius}\n                  min={sketchState.startPoint.minRadius}\n                  max={sketchState.startPoint.maxRadius}\n                  step={sketchState.startPoint.step}\n                  color={'#0079D9'}\n                ></StartNodeSlider>\n              ),\n              'Goal Node': (\n                <GoalNodeSlider\n                  value={sketchState.goalPoint.radius}\n                  setValue={setGoalPointRadius}\n                  min={sketchState.goalPoint.minRadius}\n                  max={sketchState.goalPoint.maxRadius}\n                  step={sketchState.goalPoint.step}\n                  color={'#0079D9'}\n                ></GoalNodeSlider>\n              ),\n              Rectangle: (\n                <RectangleSizeSlider\n                  width={sketchState.rectangle.width}\n                  height={sketchState.rectangle.height}\n                  setWidth={setRectangleWidth}\n                  setHeight={setRectangleHeight}\n                  min={sketchState.rectangle.minLength}\n                  max={sketchState.rectangle.maxLength}\n                  step={sketchState.rectangle.step}\n                  color={'#0079D9'}\n                ></RectangleSizeSlider>\n              ),\n              Circle: (\n                <CircleRadiusSlider\n                  value={sketchState.circle.radius}\n                  setValue={setCircleRadius}\n                  min={sketchState.circle.minRadius}\n                  max={sketchState.circle.maxRadius}\n                  step={sketchState.circle.step}\n                  color={'#0079D9'}\n                ></CircleRadiusSlider>\n              ),\n              'Step Size': (\n                <StepSizeRadiusSlider\n                  value={sketchState.stepSize}\n                  setValue={setStepSize}\n                  min={10}\n                  max={100}\n                  step={1}\n                  color={'#0079D9'}\n                ></StepSizeRadiusSlider>\n              ),\n            }[menuValue.value]\n          }\n        </div>\n      </div>\n      {/* User Input Code Ends Here */}\n      {/* This repositions the canvas */}\n      <div className=\"flex flex-col justify-center text-center items-center\">\n        <div>\n          {isLoading ? (\n            <div className=\"flex items-center justify-center space-x-3\">\n              <p>\"Waiting for backend to deliver results!\"</p>\n              <ReactLoading\n                type=\"spinningBubbles\"\n                color=\"blue\"\n                width=\"24px\"\n                height=\"24px\"\n              ></ReactLoading>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n        <div className=\"flex justify-center items-center\">\n          <div\n            className=\"cursor-pointer p-6 mb-20 lg:mb-0\"\n            style={{\n              height: `${sketchState.canvasHeight}px`,\n              width: `${sketchState.canvasWidth}px`,\n            }}\n            ref={ref}\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default function rrtSketchFunction(\n  rrtState,\n  sketchState,\n  setSketchState,\n  menuValue,\n  shouldAnimate\n) {\n  return (p5) => {\n    // Define some sketch constants\n    const W = sketchState.canvasWidth;\n    const H = sketchState.canvasHeight;\n    // Define some colors\n    const green = p5.color(0, 255, 0);\n    const blue = p5.color(0, 50, 255);\n    const red = p5.color(255, 50, 10);\n\n    // RRT Animation values\n    let explorationIndex = 0;\n    let isExplorationComplete = false;\n    let goalPathNodes = [];\n    // Collect the goal path as an array that can be iterated over backwards to\n    // go from start to goal\n    if (rrtState) {\n      let goalNode = rrtState.points[rrtState.targetNodeIndex];\n      while (goalNode) {\n        goalPathNodes.push(goalNode);\n        goalNode = rrtState.points[goalNode.parentIndex];\n      }\n    }\n    let goalPathDrawingIndex = goalPathNodes.length - 1;\n\n    /**\n     * A Method to draw all of the points in the rrtState object\n     */\n    function drawRRTPoints() {\n      // Draw all of the points in the graph\n      p5.stroke(blue);\n      p5.strokeWeight(2);\n      rrtState.points.forEach((point) => {\n        const { x, y } = point;\n        p5.fill(green);\n        p5.circle(x, y, 3);\n        // connect the current point to its \"parent\" with a line\n        if (point.parentIndex !== -1) {\n          const parent = rrtState.points[point.parentIndex];\n          const { x: parentX, y: parentY } = parent;\n          p5.line(x, y, parentX, parentY);\n        }\n      });\n      // Draw Goal Path\n      const goalNode = rrtState.points[rrtState.targetNodeIndex];\n      let point = goalNode;\n      p5.stroke(green);\n      p5.strokeWeight(3);\n      while (point.parentIndex !== -1) {\n        const parent = rrtState.points[point.parentIndex];\n        const { x: parentX, y: parentY } = parent;\n        p5.line(point.x, point.y, parentX, parentY);\n        point = rrtState.points[point.parentIndex];\n      }\n    }\n\n    function animateRRTExploration() {\n      p5.stroke(blue);\n      p5.strokeWeight(2);\n      const point = rrtState.points[explorationIndex];\n      p5.fill(green);\n      p5.circle(point.x, point.y, 3);\n      if (point.parentIndex !== -1) {\n        const parent = rrtState.points[point.parentIndex];\n        p5.line(point.x, point.y, parent.x, parent.y);\n      }\n\n      if (explorationIndex < rrtState.points.length - 1) explorationIndex++;\n      else {\n        isExplorationComplete = true;\n      }\n    }\n    function animateRRTGoalPath() {\n      if (!isExplorationComplete) return;\n      // Draw Goal Path\n      const point = goalPathNodes[goalPathDrawingIndex];\n\n      p5.stroke(green);\n      p5.strokeWeight(3);\n      const nextNode = goalPathNodes[goalPathDrawingIndex - 1];\n\n      p5.line(point.x, point.y, nextNode.x, nextNode.y);\n      if (goalPathDrawingIndex > 1) {\n        goalPathDrawingIndex--;\n      }\n    }\n\n    /**\n     * A method to draw all of the currently defined obstacles\n     */\n    function drawObstacles() {\n      p5.stroke(red);\n      p5.fill(red);\n      sketchState.obstacles.forEach((obs) => {\n        switch (obs.shape) {\n          case 'rectangle':\n            p5.rect(obs.x, obs.y, obs.w, obs.h);\n            break;\n          case 'circle':\n            p5.circle(obs.x, obs.y, obs.r * 2);\n            break;\n          default:\n        }\n      });\n    }\n\n    /**\n     * A method to draw the start and goal nodes\n     */\n    function drawStartandGoal() {\n      p5.stroke(green);\n      p5.fill(green);\n      const {\n        x: xstart,\n        y: ystart,\n        radius: startRadius,\n      } = sketchState.startPoint;\n      const { x: xgoal, y: ygoal, radius: goalRadius } = sketchState.goalPoint;\n\n      p5.circle(xstart, ystart, startRadius * 2);\n      p5.noStroke();\n      p5.fill(blue);\n      p5.circle(xgoal, ygoal, goalRadius * 2);\n    }\n\n    function handleMouseClicked() {\n      switch (menuValue.value) {\n        case 'Circle':\n          const circle = {\n            shape: 'circle',\n            x: p5.mouseX,\n            y: p5.mouseY,\n            r: sketchState.circle.radius,\n          };\n          setSketchState((prev) => ({\n            ...prev,\n            obstacles: [...prev.obstacles, circle],\n          }));\n          break;\n\n        case 'Rectangle':\n          const rectangle = {\n            shape: 'rectangle',\n            x: p5.mouseX,\n            y: p5.mouseY,\n            w: sketchState.rectangle.width,\n            h: sketchState.rectangle.height,\n          };\n          setSketchState((prev) => ({\n            ...prev,\n            obstacles: [...prev.obstacles, rectangle],\n          }));\n          break;\n\n        case 'Start Node':\n          setSketchState((prev) => ({\n            ...prev,\n            startPoint: { ...prev.startPoint, x: p5.mouseX, y: p5.mouseY },\n          }));\n          break;\n\n        case 'Goal Node':\n          setSketchState((prev) => ({\n            ...prev,\n            goalPoint: { ...prev.goalPoint, x: p5.mouseX, y: p5.mouseY },\n          }));\n          break;\n        default:\n          return;\n      }\n    }\n\n    /**\n     * The setup function for the sketch\n     */\n    function setup() {\n      const canvas = p5.createCanvas(W, H);\n      // p5.frameRate(1)\n      canvas.mousePressed(handleMouseClicked);\n      p5.background('#747474');\n\n      if (sketchState) {\n        // Draw Start and Goal as green\n        drawStartandGoal();\n      }\n      if (rrtState) {\n        // Draw the rrt graph\n        if (!shouldAnimate) {\n          drawRRTPoints();\n        }\n      }\n      //   Draw Obstacles in red\n      drawObstacles();\n    }\n    /**\n     *\n     * The draw function for the sketch\n     */\n\n    function draw() {\n      if (shouldAnimate && rrtState && sketchState) {\n        animateRRTExploration();\n        animateRRTGoalPath();\n      }\n    }\n\n    // Set all of the p5 objects important functions here\n    p5.setup = setup;\n    p5.draw = draw;\n  };\n}\n","function convertObstaclesToBackendFormat(obstacles) {\n  const safetyPadding = 10\n  return obstacles.map((obstacle) => {\n    switch (obstacle.shape) {\n      case 'rectangle':\n        const x_lower = obstacle.x;\n        const y_lower = obstacle.y;\n        const x_upper = x_lower + obstacle.w;\n        const y_upper = y_lower + obstacle.h;\n        return {\n          shape: obstacle.shape,\n          definition: [x_lower, y_lower, x_upper, y_upper],\n        };\n        break;\n\n      case 'circle':\n        return {\n          shape: obstacle.shape,\n          definition: [obstacle.x, obstacle.y, obstacle.r],\n        };\n        break;\n      default:\n        return null;\n    }\n  });\n}\n\nexport function preparePayload(sketchState) {\n  const payload = {};\n  payload['start'] = [sketchState.startPoint.x, sketchState.startPoint.y];\n  payload['goal'] = [sketchState.goalPoint.x, sketchState.goalPoint.y];\n  payload['goalRadius'] = sketchState.goalPoint.radius;\n  payload['width'] = sketchState.canvasWidth;\n  payload['height'] = sketchState.canvasHeight;\n  payload['d_max'] = sketchState.stepSize;\n  payload['obstacles'] = convertObstaclesToBackendFormat(sketchState.obstacles);\n\n  return payload;\n}\n","import React from 'react';\nimport Slider from '../../ui/slider';\nfunction StartNodeSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div className=\"flex flex-col justify-center items-center\">\n      <p>The Start Node Radius is: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction GoalNodeSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div className=\"flex flex-col justify-center items-center\">\n      <p>The Goal Area Radius is: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction CircleRadiusSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div className=\"flex flex-col justify-center items-center\">\n      <p>Set the radius of the circle obstacles: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction StepSizeRadiusSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div className=\"flex flex-col justify-center items-center\">\n      <p>Set the max step size for the RRT algorithm: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction RectangleSizeSlider({\n  width,\n  height,\n  setWidth,\n  setHeight,\n  min,\n  max,\n  step,\n  color,\n}) {\n  return (\n    <div className=\"flex flex-col justify-center items-center\">\n      <h3 className=\"text-lg font-bold\">\n        Set the Dimensions of the Rectangular Obstacles\n      </h3>\n      <p>Set the Width: {width}</p>\n      <Slider\n        value={width}\n        setValue={setWidth}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n      <p>Set the Height: {height}</p>\n      <Slider\n        value={height}\n        setValue={setHeight}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nexport {\n  StartNodeSlider,\n  GoalNodeSlider,\n  RectangleSizeSlider,\n  CircleRadiusSlider,\n  StepSizeRadiusSlider\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport p5 from 'p5';\nimport axios from 'axios';\nimport ListBox from '../../ui/listbox';\nimport rrtSketchFunction from './rrtSketch';\nimport { useDebounce } from '../../../customhooks/debounce';\nimport { preparePayload } from './axiosHelpers';\nimport ReactLoading from 'react-loading';\nimport useCanvasSize from '../../../customhooks/useCanvasSize';\nimport {\n  StartNodeSlider,\n  GoalNodeSlider,\n  RectangleSizeSlider,\n  CircleRadiusSlider,\n  StepSizeRadiusSlider,\n} from './helpers';\n\nconst SHAPES = [\n  { id: 1, value: 'Start Node', unavailable: false },\n  { id: 2, value: 'Goal Node', unavailable: false },\n  { id: 3, value: 'Rectangle', unavailable: false },\n  { id: 4, value: 'Circle', unavailable: false },\n  { id: 5, value: 'Step Size', unavailable: false },\n];\n\nconst initialSketchState = {\n  obstacles: [],\n  startPoint: {\n    x: 100,\n    y: 100,\n    radius: 15,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  goalPoint: {\n    x: 300,\n    y: 100,\n    radius: 30,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  stepSize: 15,\n  circle: {\n    radius: 20,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  rectangle: {\n    height: 20,\n    width: 20,\n    minLength: 1,\n    maxLength: 100,\n    step: 1,\n  },\n  canvasWidth: 600,\n  canvasHeight: 600,\n};\n\n/**\n * The state of the RRT visualization defaults to null, is updated by the user\n * (for things like start, end, and obstacles), submits these to the backend\n * and gets back an object including a list of points\n * state = {\n * goal: array of 2 numbers [x,y],\n * goalRadius: number,\n * obstacles: array of objects, each object has the form {shape: string, definition: array}\n * (i.e. {shape:circle, definition: [0,0,1]}),\n * points: array of objects {x:number, y:number, parentIndex: number},\n *                          targetNodeIndex: number (the index of the point in the rrt at the goal )\n *\n * }\n * @returns\n */\nexport default function RRTVisualization() {\n  /*----------------------------------------------------------------------------\n  SET UP STATE AND REFS\n  --------------------------------------------------------------------------- */\n  const [state, setState] = useState(null);\n  const [sketchState, setSketchState] = useState(initialSketchState);\n  const [menuValue, setMenuValue] = useState('circle');\n  const [isLoading, setIsLoading] = useState(false);\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n  const canvasSize = useCanvasSize();\n  // Chose not to debounce because it caused a size delay in rendering that looked bad when the sketch was redrawn\n  // const debouncedSketchState = useDebounce(sketchState, 250);\n  const ref = useRef();\n\n  //   Resize the p5 canvas when the screen size changes\n  useEffect(() => {\n    const { width, height } = canvasSize;\n    setSketchState((prev) => ({\n      ...prev,\n      canvasWidth: width,\n      canvasHeight: height,\n    }));\n  }, [canvasSize]);\n  /*----------------------------------------------------------------------------\n  GET INITIAL RRT Example MAP WHEN THE PAGE LOADS \n  --------------------------------------------------------------------------- */\n  // useEffect(() => {\n  //   // getRRTMap()\n  // }, []);\n\n  /*----------------------------------------------------------------------------\n  Send the user defined map to the backend to solve it!\n  --------------------------------------------------------------------------- */\n  async function getRRTMap() {\n    if (isLoading) return;\n    setIsLoading(true);\n    const url = `${process.env.GATSBY_BACKEND_URL}/rrt`;\n    const payload = await axios.post(url, preparePayload(sketchState));\n    setIsLoading(false);\n    setShouldAnimate(true);\n    setState(payload.data);\n  }\n  /*----------------------------------------------------------------------------\n  THIS IS THE USE EFFECT THAT MANAGES THE P5 RRT SKETCH FUNCTION\n  --------------------------------------------------------------------------- */\n  // This is the effect in charge of managing the p5 sketch\n  useEffect(() => {\n    let myp5 = new p5(\n      rrtSketchFunction(\n        state,\n        sketchState,\n        setSketchState,\n        menuValue,\n        shouldAnimate\n      ),\n      ref.current\n    );\n    setShouldAnimate(false);\n    // Return a function that deletes the canvas so we don't have duplicates\n    return () => {\n      myp5.remove();\n    };\n  }, [state, sketchState, menuValue]);\n\n  /*----------------------------------------------------------------------------\n  HELPER FUNCTIONS TO ORGANIZE OUR SET STATE FOR THE DIFFERENT SLIDERS\n  --------------------------------------------------------------------------- */\n  // Helper Functions to manage state:\n  /**\n   *\n   * @param {*} value The new Start Point Radius being captured by the slider input\n   */\n  function setStartPointRadius(value) {\n    setSketchState((prev) => {\n      return { ...prev, startPoint: { ...prev.startPoint, radius: value } };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new Goal Point Radius being captured by the slider input\n   */\n  function setGoalPointRadius(value) {\n    setSketchState((prev) => {\n      return {\n        ...prev,\n        goalPoint: { ...prev.goalPoint, radius: value },\n      };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new rectangle obstacle width\n   */\n  function setRectangleWidth(value) {\n    setSketchState((prev) => {\n      return { ...prev, rectangle: { ...prev.rectangle, width: value } };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new rectangle obstacle height\n   */\n  function setRectangleHeight(value) {\n    setSketchState((prev) => {\n      return { ...prev, rectangle: { ...prev.rectangle, height: value } };\n    });\n  }\n\n  function setCircleRadius(value) {\n    setSketchState((prev) => {\n      return { ...prev, circle: { ...prev.circle, radius: value } };\n    });\n  }\n\n  function setStepSize(value) {\n    setSketchState((prev) => {\n      return { ...prev, stepSize: value };\n    });\n  }\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 text-black\">\n      {/* IMPORTANT NOTE: REMEMBER TO SET THE WIDTH AND HEIGHT OF THE CANVAS ON THE DIV OR IT WILL HAVE STRANGE SCROLLING BEHAVIOR!!!!!!!!! */}\n      <div className=\"text-black flex flex-col items-center\">\n        {/* Explanation of RRT Goes Here */}\n\n        {/* User Input Code Starts Here */}\n\n        <div class=\"flex flex-col\">\n          <div>\n            <h1 className=\"text-5xl font-bold text-gray-800 p-6\">\n              Rapidly Exploring Random Trees\n            </h1>\n          </div>\n\n          <div>\n            <h2 className=\"text-l text-gray-800 p-6\">\n              Use the drop down menu and slider below to select things to place,\n              and then{' '}\n              <span className=\"font-bold underline\">click on the screen</span>{' '}\n              to place them!\n            </h2>\n          </div>\n\n          <div>\n            <h2 className=\"text-l text-gray-800 p-6\">\n              Once you've placed a start node and end node, and any obstacles\n              you'd like, generate the map!\n            </h2>\n          </div>\n\n          <div className=\"flex flex-col\">\n            {\n              {\n                'Start Node': (\n                  <StartNodeSlider\n                    value={sketchState.startPoint.radius}\n                    setValue={setStartPointRadius}\n                    min={sketchState.startPoint.minRadius}\n                    max={sketchState.startPoint.maxRadius}\n                    step={sketchState.startPoint.step}\n                    color={'#0079D9'}\n                  ></StartNodeSlider>\n                ),\n                'Goal Node': (\n                  <GoalNodeSlider\n                    value={sketchState.goalPoint.radius}\n                    setValue={setGoalPointRadius}\n                    min={sketchState.goalPoint.minRadius}\n                    max={sketchState.goalPoint.maxRadius}\n                    step={sketchState.goalPoint.step}\n                    color={'#0079D9'}\n                  ></GoalNodeSlider>\n                ),\n                Rectangle: (\n                  <RectangleSizeSlider\n                    width={sketchState.rectangle.width}\n                    height={sketchState.rectangle.height}\n                    setWidth={setRectangleWidth}\n                    setHeight={setRectangleHeight}\n                    min={sketchState.rectangle.minLength}\n                    max={sketchState.rectangle.maxLength}\n                    step={sketchState.rectangle.step}\n                    color={'#0079D9'}\n                  ></RectangleSizeSlider>\n                ),\n                Circle: (\n                  <CircleRadiusSlider\n                    value={sketchState.circle.radius}\n                    setValue={setCircleRadius}\n                    min={sketchState.circle.minRadius}\n                    max={sketchState.circle.maxRadius}\n                    step={sketchState.circle.step}\n                    color={'#0079D9'}\n                  ></CircleRadiusSlider>\n                ),\n                'Step Size': (\n                  <StepSizeRadiusSlider\n                    value={sketchState.stepSize}\n                    setValue={setStepSize}\n                    min={10}\n                    max={100}\n                    step={1}\n                    color={'#0079D9'}\n                  ></StepSizeRadiusSlider>\n                ),\n              }[menuValue.value]\n            }\n          </div>\n        </div>\n        <ListBox options={SHAPES} updateParentSelection={setMenuValue} />\n        <div className=\"flex justify-center items-center space-x-3\">\n          <button\n            className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:cursor-not-allowed\"\n            onClick={() => getRRTMap()}\n            disabled={isLoading}\n          >\n            Generate Map!\n          </button>\n          <button\n            className=\"bg-red-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-red-400 hover:ring hover:ring-red-400\"\n            onClick={() => setSketchState({ ...sketchState, obstacles: [] })}\n          >\n            Clear Obstacles (X)\n          </button>\n        </div>\n      </div>\n      {/* User Input Code Ends Here */}\n      {/* This repositions the canvas */}\n      <div className=\"flex flex-col justify-center text-center items-center\">\n        <div>\n          {isLoading ? (\n            <div className=\"flex items-center justify-center space-x-3\">\n              <p>\"Waiting for backend to deliver results!\"</p>\n              <ReactLoading\n                type=\"spinningBubbles\"\n                color=\"blue\"\n                width=\"24px\"\n                height=\"24px\"\n              ></ReactLoading>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n        <div className=\"flex justify-center items-center\">\n          <div\n            className=\"cursor-pointer p-6 mb-20 lg:mb-0\"\n            style={{\n              height: `${sketchState.canvasHeight}px`,\n              width: `${sketchState.canvasWidth}px`,\n            }}\n            ref={ref}\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport MyListbox from '../ui/listbox';\nimport BFSVisualization from './bfs';\nimport RRTVisualization from './rrt';\nconst MAPPING_ALGORITHM_OPTIONS = [\n  { id: 1, value: 'RRT', unavailable: false },\n  { id: 3, value: 'BFS', unavailable: false },\n  { id: 2, value: 'RRT *', unavailable: false },\n];\nexport default function MappingAlgorithms() {\n  const [selectedMappingAlgorithm, setSelectedMappingAlgorithm] =\n    useState('RRT');\n  return (\n    <div className=\"flex flex-col items-center text-gray-800\">\n      <p className=\"text-xs lg:text-xl text-gray-800 font-bold p-2\">Select a Mapping Algorithm!</p>\n      \n      <MyListbox\n        options={MAPPING_ALGORITHM_OPTIONS}\n        updateParentSelection={setSelectedMappingAlgorithm}\n      />\n      {\n        {\n          RRT: <RRTVisualization />,\n          BFS: <BFSVisualization />,\n          'RRT *': <h1>RRT *</h1>,\n        }[selectedMappingAlgorithm.value]\n      }\n    </div>\n  );\n}\n","import Car from '../../../carVisualizer/car';\nimport CarManager from '../../../carVisualizer/carManager';\nexport default function rrtSketchFunction(\n  rrtState,\n  sketchState,\n  setSketchState,\n  menuValue,\n  shouldAnimate,\n  setShouldAnimate,\n  car_ref\n) {\n  return (p5) => {\n    // Define some sketch constants\n    const W = sketchState.canvasWidth;\n    const H = sketchState.canvasHeight;\n    // Define some colors\n    const green = p5.color(0, 255, 0);\n    const blue = p5.color(0, 50, 255);\n    const red = p5.color(255, 50, 10);\n\n    // RRT Animation values\n    let explorationIndex = 0;\n    let isExplorationComplete = false;\n    let goalPathNodes = [];\n    // Collect the goal path as an array that can be iterated over backwards to\n    // go from start to goal\n    if (rrtState) {\n      let goalNode = rrtState.points[rrtState.targetNodeIndex];\n      while (goalNode) {\n        goalPathNodes.push(goalNode);\n        goalNode = rrtState.points[goalNode.parentIndex];\n      }\n    }\n    let goalPathDrawingIndex = goalPathNodes.length - 1;\n\n    let car = new Car(\n      car_ref.current.x,\n      car_ref.current.y,\n      car_ref.current.theta,\n      car_ref.current.phi,\n      sketchState.carLength,\n      sketchState.carColor,\n      car_ref,\n      p5\n    );\n    car.setSpeed(0);\n\n    const carManager = new CarManager(car, sketchState, p5);\n\n\n    /**\n     * A Method to draw all of the points in the rrtState object\n     */\n    function drawRRTPoints() {\n      // Draw all of the points in the graph\n      p5.stroke(blue);\n      p5.strokeWeight(2);\n      rrtState.points.forEach((point) => {\n        const { x, y } = point;\n        p5.fill(green);\n        p5.circle(x, y, 3);\n        // connect the current point to its \"parent\" with a line\n        if (point.parentIndex !== -1) {\n          const parent = rrtState.points[point.parentIndex];\n          const { x: parentX, y: parentY } = parent;\n          p5.line(x, y, parentX, parentY);\n        }\n      });\n      // Draw Goal Path\n      const goalNode = rrtState.points[rrtState.targetNodeIndex];\n      let point = goalNode;\n      p5.stroke(green);\n      p5.strokeWeight(3);\n      while (point.parentIndex !== -1) {\n        const parent = rrtState.points[point.parentIndex];\n        const { x: parentX, y: parentY } = parent;\n        p5.line(point.x, point.y, parentX, parentY);\n        point = rrtState.points[point.parentIndex];\n      }\n    }\n\n    function animateRRTExploration() {\n      p5.stroke(blue);\n      p5.strokeWeight(2);\n      const point = rrtState.points[explorationIndex];\n      p5.fill(green);\n      p5.circle(point.x, point.y, 3);\n      if (point.parentIndex !== -1) {\n        const parent = rrtState.points[point.parentIndex];\n        p5.line(point.x, point.y, parent.x, parent.y);\n      }\n\n      if (explorationIndex < rrtState.points.length - 1) explorationIndex++;\n      else {\n        isExplorationComplete = true;\n      }\n    }\n    function animateRRTGoalPath() {\n      if (!isExplorationComplete) return;\n      // Draw Goal Path\n      const point = goalPathNodes[goalPathDrawingIndex];\n\n      p5.stroke(green);\n      p5.strokeWeight(3);\n      const nextNode = goalPathNodes[goalPathDrawingIndex - 1];\n\n      p5.line(point.x, point.y, nextNode.x, nextNode.y);\n      if (goalPathDrawingIndex > 1) {\n        goalPathDrawingIndex--;\n      } else {\n        setShouldAnimate(1)\n      }\n    }\n\n    /**\n     * A method to draw all of the currently defined obstacles\n     */\n    function drawObstacles() {\n      p5.stroke(red);\n      p5.fill(red);\n      sketchState.obstacles.forEach((obs) => {\n        switch (obs.shape) {\n          case 'rectangle':\n            p5.rect(obs.x, obs.y, obs.w, obs.h);\n            break;\n          case 'circle':\n            p5.circle(obs.x, obs.y, obs.r * 2);\n            break;\n          default:\n        }\n      });\n    }\n\n    /**\n     * A method to draw the start and goal nodes\n     */\n    function drawStartandGoal() {\n      p5.stroke(green);\n      p5.fill(green);\n      const {\n        x: xstart,\n        y: ystart,\n        radius: startRadius,\n      } = sketchState.startPoint;\n      const { x: xgoal, y: ygoal, radius: goalRadius } = sketchState.goalPoint;\n\n      p5.circle(xstart, ystart, startRadius * 2);\n      p5.noStroke();\n      p5.fill(blue);\n      p5.circle(xgoal, ygoal, goalRadius * 2);\n    }\n\n    function handleMouseClicked() {\n      switch (menuValue.value) {\n        case 'Circle':\n          const circle = {\n            shape: 'circle',\n            x: p5.mouseX,\n            y: p5.mouseY,\n            r: sketchState.circle.radius,\n          };\n          setSketchState((prev) => ({\n            ...prev,\n            obstacles: [...prev.obstacles, circle],\n          }));\n          break;\n\n        case 'Rectangle':\n          const rectangle = {\n            shape: 'rectangle',\n            x: p5.mouseX,\n            y: p5.mouseY,\n            w: sketchState.rectangle.width,\n            h: sketchState.rectangle.height,\n          };\n          setSketchState((prev) => ({\n            ...prev,\n            obstacles: [...prev.obstacles, rectangle],\n          }));\n          break;\n\n        case 'Start Node':\n          setSketchState((prev) => ({\n            ...prev,\n            startPoint: { ...prev.startPoint, x: p5.mouseX, y: p5.mouseY },\n          }));\n          car_ref.current.x = p5.mouseX;\n          car_ref.current.y = p5.mouseY;\n          break;\n\n        case 'Goal Node':\n          setSketchState((prev) => ({\n            ...prev,\n            goalPoint: { ...prev.goalPoint, x: p5.mouseX, y: p5.mouseY },\n          }));\n          break;\n        default:\n          return;\n      }\n    }\n\n    /**\n     * The setup function for the sketch\n     */\n    function setup() {\n      const canvas = p5.createCanvas(W, H);\n      // p5.frameRate(1)\n      canvas.mousePressed(handleMouseClicked);\n      p5.background('#747474');\n\n      if (sketchState) {\n        // Draw Start and Goal as green\n        drawStartandGoal();\n        car.run();\n      }\n      if (rrtState) {\n        // Draw the rrt graph\n        if (shouldAnimate == 2) {\n          drawRRTPoints();\n\n        }\n      }\n      //   Draw Obstacles in red\n      drawObstacles();\n    }\n    /**\n     *\n     * The draw function for the sketch\n     */\n\n    const start2goalPath = goalPathNodes.reverse();\n    function draw() {\n      if (shouldAnimate == 2) {\n        return;\n      }\n      if (shouldAnimate == 0 && rrtState && sketchState) {\n        animateRRTExploration();\n        animateRRTGoalPath();\n        car.run();\n      }\n      if (shouldAnimate == 1 && rrtState && sketchState) {\n        p5.background('#747474');\n        drawObstacles();\n        drawStartandGoal();\n        drawRRTPoints();\n        carManager.pidTrackPositionWayPoints(start2goalPath);\n      }\n\n      if (carManager.reachedGoal) {\n        setShouldAnimate(2);\n      }\n    }\n\n    // Set all of the p5 objects important functions here\n    p5.setup = setup;\n    p5.draw = draw;\n  };\n}\n","function convertObstaclesToBackendFormat(obstacles) {\n  const safetyPadding = 10\n  return obstacles.map((obstacle) => {\n    switch (obstacle.shape) {\n      case 'rectangle':\n        const x_lower = obstacle.x;\n        const y_lower = obstacle.y;\n        const x_upper = x_lower + obstacle.w;\n        const y_upper = y_lower + obstacle.h;\n        return {\n          shape: obstacle.shape,\n          definition: [x_lower, y_lower, x_upper, y_upper],\n        };\n        break;\n\n      case 'circle':\n        return {\n          shape: obstacle.shape,\n          definition: [obstacle.x, obstacle.y, obstacle.r],\n        };\n        break;\n      default:\n        return null;\n    }\n  });\n}\n\nexport function preparePayload(sketchState) {\n  const payload = {};\n  payload['start'] = [sketchState.startPoint.x, sketchState.startPoint.y];\n  payload['goal'] = [sketchState.goalPoint.x, sketchState.goalPoint.y];\n  payload['goalRadius'] = sketchState.goalPoint.radius;\n  payload['width'] = sketchState.canvasWidth;\n  payload['height'] = sketchState.canvasHeight;\n  payload['d_max'] = sketchState.stepSize;\n  payload['obstacles'] = convertObstaclesToBackendFormat(sketchState.obstacles);\n\n  return payload;\n}\n","import React from 'react';\nimport Slider from '../../ui/slider';\nfunction StartNodeSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div className=\"flex flex-col justify-center items-center\">\n      <p>The Start Node Radius is: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction GoalNodeSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div>\n      <p>The Goal Area Radius is: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction CircleRadiusSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div>\n      <p>Set the radius of the circle obstacles: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction StepSizeRadiusSlider({ value, setValue, min, max, step, color }) {\n  return (\n    <div>\n      <p>Set the max step size for the RRT algorithm: {value}</p>\n      <Slider\n        value={value}\n        setValue={setValue}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nfunction RectangleSizeSlider({\n  width,\n  height,\n  setWidth,\n  setHeight,\n  min,\n  max,\n  step,\n  color,\n}) {\n  return (\n    <div>\n      <h3 className=\"text-lg font-bold\">\n        Set the Dimensions of the Rectangular Obstacles\n      </h3>\n      <p>Set the Width: {width}</p>\n      <Slider\n        value={width}\n        setValue={setWidth}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n      <p>Set the Height: {height}</p>\n      <Slider\n        value={height}\n        setValue={setHeight}\n        min={min}\n        max={max}\n        step={step}\n        color={color}\n      ></Slider>\n    </div>\n  );\n}\n\nexport {\n  StartNodeSlider,\n  GoalNodeSlider,\n  RectangleSizeSlider,\n  CircleRadiusSlider,\n  StepSizeRadiusSlider\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport p5 from 'p5';\nimport axios from 'axios';\nimport ListBox from '../../ui/listbox';\nimport bangBangRRTSketchFunction from './bangBangRRTSketch';\nimport { preparePayload } from './axiosHelpers';\nimport ReactLoading from 'react-loading';\nimport useCanvasSize from '../../../customhooks/useCanvasSize';\nimport {\n  StartNodeSlider,\n  GoalNodeSlider,\n  RectangleSizeSlider,\n  CircleRadiusSlider,\n  StepSizeRadiusSlider,\n} from './helpers';\n\nconst SHAPES = [\n  { id: 1, value: 'Start Node', unavailable: false },\n  { id: 2, value: 'Goal Node', unavailable: false },\n  { id: 3, value: 'Rectangle', unavailable: false },\n  { id: 4, value: 'Circle', unavailable: false },\n  { id: 5, value: 'Step Size', unavailable: false },\n];\n\nconst initialSketchState = {\n  carLength: 10,\n  carSpeed: 1,\n  carColor: '#ff0000',\n  obstacles: [],\n  startPoint: {\n    x: 100,\n    y: 100,\n    radius: 15,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  goalPoint: {\n    x: 300,\n    y: 100,\n    radius: 30,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  stepSize: 40,\n  circle: {\n    radius: 20,\n    minRadius: 1,\n    maxRadius: 100,\n    step: 1,\n  },\n  rectangle: {\n    height: 20,\n    width: 20,\n    minLength: 1,\n    maxLength: 100,\n    step: 1,\n  },\n  canvasWidth: 600,\n  canvasHeight: 600,\n};\n\n/**\n * The state of the RRT visualization defaults to null, is updated by the user\n * (for things like start, end, and obstacles), submits these to the backend\n * and gets back an object including a list of points\n * state = {\n * goal: array of 2 numbers [x,y],\n * goalRadius: number,\n * obstacles: array of objects, each object has the form {shape: string, definition: array}\n * (i.e. {shape:circle, definition: [0,0,1]}),\n * points: array of objects {x:number, y:number, parentIndex: number},\n *                          targetNodeIndex: number (the index of the point in the rrt at the goal )\n *\n * }\n * @returns\n */\nexport default function BangBangRRTVisualization() {\n  /*----------------------------------------------------------------------------\n  SET UP STATE AND REFS\n  --------------------------------------------------------------------------- */\n  const [state, setState] = useState(null);\n  const [sketchState, setSketchState] = useState(initialSketchState);\n  const [menuValue, setMenuValue] = useState('circle');\n  const [isLoading, setIsLoading] = useState(false);\n  const [shouldAnimate, setShouldAnimate] = useState(0);\n  const canvasSize = useCanvasSize();\n  const ref = useRef();\n  const car_ref = useRef({\n    x: sketchState.startPoint.x,\n    y: sketchState.startPoint.y,\n    theta: 0,\n    phi: 0,\n  });\n\n  //   Resize the p5 canvas when the screen size changes\n  useEffect(() => {\n    const { width, height } = canvasSize;\n    setSketchState((prev) => ({\n      ...prev,\n      canvasWidth: width,\n      canvasHeight: height,\n    }));\n  }, [canvasSize]);\n  /*----------------------------------------------------------------------------\n  GET INITIAL RRT Example MAP WHEN THE PAGE LOADS \n  --------------------------------------------------------------------------- */\n  // useEffect(() => {\n  //   // getRRTMap()\n  // }, []);\n\n  /*----------------------------------------------------------------------------\n  Send the user defined map to the backend to solve it!\n  --------------------------------------------------------------------------- */\n  async function getRRTMap() {\n    setShouldAnimate(0);\n    if (isLoading) return;\n    setIsLoading(true);\n    const url = `${process.env.GATSBY_BACKEND_URL}/rrt`;\n    const payload = await axios.post(url, preparePayload(sketchState));\n    setIsLoading(false);\n    setState(payload.data);\n  }\n  /*----------------------------------------------------------------------------\n  THIS IS THE USE EFFECT THAT MANAGES THE P5 RRT SKETCH FUNCTION\n  --------------------------------------------------------------------------- */\n  // This is the effect in charge of managing the p5 sketch\n  useEffect(() => {\n    // console.log(car_ref.current)\n    let myp5 = new p5(\n      bangBangRRTSketchFunction(\n        state,\n        sketchState,\n        setSketchState,\n        menuValue,\n        shouldAnimate,\n        setShouldAnimate,\n        car_ref\n      ),\n      ref.current\n    );\n    // setShouldAnimate(false);\n    // Return a function that deletes the canvas so we don't have duplicates\n    return () => {\n      myp5.remove();\n    };\n  }, [state, sketchState, menuValue, shouldAnimate]);\n\n  /*----------------------------------------------------------------------------\n  HELPER FUNCTIONS TO ORGANIZE OUR SET STATE FOR THE DIFFERENT SLIDERS\n  --------------------------------------------------------------------------- */\n  // Helper Functions to manage state:\n  /**\n   *\n   * @param {*} value The new Start Point Radius being captured by the slider input\n   */\n  function setStartPointRadius(value) {\n    setSketchState((prev) => {\n      return { ...prev, startPoint: { ...prev.startPoint, radius: value } };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new Goal Point Radius being captured by the slider input\n   */\n  function setGoalPointRadius(value) {\n    setSketchState((prev) => {\n      return {\n        ...prev,\n        goalPoint: { ...prev.goalPoint, radius: value },\n      };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new rectangle obstacle width\n   */\n  function setRectangleWidth(value) {\n    setSketchState((prev) => {\n      return { ...prev, rectangle: { ...prev.rectangle, width: value } };\n    });\n  }\n\n  /**\n   *\n   * @param {*} value The new rectangle obstacle height\n   */\n  function setRectangleHeight(value) {\n    setSketchState((prev) => {\n      return { ...prev, rectangle: { ...prev.rectangle, height: value } };\n    });\n  }\n\n  function setCircleRadius(value) {\n    setSketchState((prev) => {\n      return { ...prev, circle: { ...prev.circle, radius: value } };\n    });\n  }\n\n  function setStepSize(value) {\n    setSketchState((prev) => {\n      return { ...prev, stepSize: value };\n    });\n  }\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 text-black\">\n      {/* IMPORTANT NOTE: REMEMBER TO SET THE WIDTH AND HEIGHT OF THE CANVAS ON THE DIV OR IT WILL HAVE STRANGE SCROLLING BEHAVIOR!!!!!!!!! */}\n      <div className=\"text-black flex flex-col items-center\">\n        {/* Explanation of RRT Goes Here */}\n        <div className=\"p-4\">\n          <div className=\"flex flex-col\">\n            <div>\n              <h1 className=\"text-5xl font-bold text-gray-800 p-6\">\n                Bang Bang + RRT</h1>\n            </div>\n\n            <div>\n              <h2 className=\"text-l text-gray-800 p-6\">\n              <span className=\"font-bold underline\">Click on the screen</span> to define the start, end, \n              and obstacles on the map by (also using the drop down and slider below).  </h2>\n            </div>\n\n\n            <div>\n              <h2 className=\"text-l text-gray-800 p-6\">\n                Now we can combine mapping and control alogirhtms - so the car really can find its own way from start to finish!\n              </h2>\n            </div>\n\n\n\n          </div>\n\n\n\n\n        </div>\n        {/* User Input Code Starts Here */}\n        <ListBox options={SHAPES} updateParentSelection={setMenuValue} />\n        <div className=\"flex justify-center items-center space-x-3\">\n          <button\n            className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:cursor-not-allowed\"\n            onClick={() => getRRTMap()}\n            disabled={isLoading}\n          >\n            Generate the RRT Map!\n          </button>\n          <button\n            className=\"bg-red-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-red-400 hover:ring hover:ring-red-400\"\n            onClick={() => {\n              setSketchState({ ...sketchState, obstacles: [] });\n              setShouldAnimate(2)\n            }}\n          >\n            Clear Obstacles (X)\n          </button>\n        </div>\n        <div className=\"flex flex-col\">\n          {\n            {\n              'Start Node': (\n                <StartNodeSlider\n                  value={sketchState.startPoint.radius}\n                  setValue={setStartPointRadius}\n                  min={sketchState.startPoint.minRadius}\n                  max={sketchState.startPoint.maxRadius}\n                  step={sketchState.startPoint.step}\n                  color={'#0079D9'}\n                ></StartNodeSlider>\n              ),\n              'Goal Node': (\n                <GoalNodeSlider\n                  value={sketchState.goalPoint.radius}\n                  setValue={setGoalPointRadius}\n                  min={sketchState.goalPoint.minRadius}\n                  max={sketchState.goalPoint.maxRadius}\n                  step={sketchState.goalPoint.step}\n                  color={'#0079D9'}\n                ></GoalNodeSlider>\n              ),\n              Rectangle: (\n                <RectangleSizeSlider\n                  width={sketchState.rectangle.width}\n                  height={sketchState.rectangle.height}\n                  setWidth={setRectangleWidth}\n                  setHeight={setRectangleHeight}\n                  min={sketchState.rectangle.minLength}\n                  max={sketchState.rectangle.maxLength}\n                  step={sketchState.rectangle.step}\n                  color={'#0079D9'}\n                ></RectangleSizeSlider>\n              ),\n              Circle: (\n                <CircleRadiusSlider\n                  value={sketchState.circle.radius}\n                  setValue={setCircleRadius}\n                  min={sketchState.circle.minRadius}\n                  max={sketchState.circle.maxRadius}\n                  step={sketchState.circle.step}\n                  color={'#0079D9'}\n                ></CircleRadiusSlider>\n              ),\n              'Step Size': (\n                <StepSizeRadiusSlider\n                  value={sketchState.stepSize}\n                  setValue={setStepSize}\n                  min={10}\n                  max={100}\n                  step={1}\n                  color={'#0079D9'}\n                ></StepSizeRadiusSlider>\n              ),\n            }[menuValue.value]\n          }\n        </div>\n      </div>\n      {/* User Input Code Ends Here */}\n      {/* This repositions the canvas */}\n      <div className=\"flex flex-col justify-center text-center items-center\">\n        <div>\n          {isLoading ? (\n            <div className=\"flex items-center justify-center space-x-3\">\n              <p>\"Waiting for backend to deliver results!\"</p>\n              <ReactLoading\n                type=\"spinningBubbles\"\n                color=\"blue\"\n                width=\"24px\"\n                height=\"24px\"\n              ></ReactLoading>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n        <div className=\"flex justify-center items-center\">\n          <div\n            className=\"cursor-pointer p-6 mb-20 lg:mb-0\"\n            style={{\n              height: `${sketchState.canvasHeight}px`,\n              width: `${sketchState.canvasWidth}px`,\n            }}\n            ref={ref}\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import ListBox from '../ui/listbox';\nimport React, { useState, useEffect, useRef } from 'react';\nimport BangBangRRTVisualization from './bangbangRRT';\n\n\nconst CONTROL_ALGORITHM_OPTIONS = [\n  { id: 1, value: 'Bang Bang', unavailable: false },\n  { id: 2, value: 'Optimal Control', unavailable: false },\n  { id: 3, value: 'PID', unavailable: false },\n];\n\nconst MAPPING_ALGORITHM_OPTIONS = [\n  { id: 1, value: 'RRT', unavailable: false },\n  { id: 2, value: 'RRT *', unavailable: false },\n  { id: 3, value: 'BFS', unavailable: false },\n];\nexport default function MappingandControlAlgorithms() {\n  const [selectedControlAlgorithm, setSelectedControlAlgorithm] =\n    useState('Bang Bang');\n  const [selectedMappingAlgorithm, setSelectedMappingAlgorithm] =\n    useState('RRT');\n  return (\n    <div className=\"flex flex-col items-center text-gray-800\">\n      <h1 className=\"text-xs lg:text-xl text-gray-800 font-bold\">\n        Select a Control and a Mapping Algorithm!\n      </h1>\n      <div className='flex justify-center space-x-4'>\n        <ListBox\n          options={CONTROL_ALGORITHM_OPTIONS}\n          updateParentSelection={setSelectedControlAlgorithm}\n        />\n\n        <ListBox\n          options={MAPPING_ALGORITHM_OPTIONS}\n          updateParentSelection={setSelectedMappingAlgorithm}\n        />\n      </div>\n      {\n        {\n          'Bang Bang RRT': <BangBangRRTVisualization/>,\n         \n        }[selectedControlAlgorithm.value + \" \" + selectedMappingAlgorithm.value]\n      }\n    </div>\n  );\n}\n","import React from 'react'\nexport default function Docs()\n{\n    return <div className=\"flex flex-col p-6 text-black text-lg items-center justify-center\">\n\n        <h1 className='text-2xl p-3 font-bold'>Find our code in the following four repos!</h1>\n        <ul className='space-y-3'>\n            <li><a target=\"_blank\" className=\"text-blue-600\" href=\"https://github.com/OfekPeres/controls-visualization\">Visualization Code (Front End)</a></li>\n            <li><a target=\"_blank\" className=\"text-blue-600\" href=\"https://github.com/OfekPeres/controls-visualization-backend\">Server Code (Python Flask Backend)</a></li>\n            <li><a target=\"_blank\" className=\"text-blue-600\" href=\"https://github.com/OfekPeres/controls-algorithms\">Control Algorithms</a></li>\n            <li><a target=\"_blank\" className=\"text-blue-600\" href=\"https://github.com/OfekPeres/MappingAlgorithms\">Mapping Algorithms</a></li>\n        </ul>\n\n        <h1 className='text-2xl p-3 font-bold'>Live Docs for the Controls and Mapping Algorithms can be found here:</h1>\n        <ul className='space-y-3'>\n            <li><a target=\"_blank\" className=\"text-blue-600\" href=\"https://ofekperes.github.io/MappingAlgorithms/\">Mapping Algorithms Docs</a></li>\n            <li><a target=\"_blank\" className=\"text-blue-600\" href=\"https://ofekperes.github.io/controls-algorithms/\">Control Algorithms Docs</a></li>\n        </ul>\n    </div>\n}","import React, { useState, useEffect } from 'react';\nimport Tabs from '../components/ui/tabs/';\n\nimport Tutorial from '../components/tutorial';\nimport ControlAlgorithms from '../components/controlsAlgorithms';\nimport MappingAlgorithms from '../components/mappingAlgorithms';\nimport MappingandControlAlgorithms from '../components/mappingAndControls';\nimport Docs from '../components/documentation';\nfunction Square({ text }) {\n  return <div className=\"w-72 h-72 relative bg-blue-300\">{text}</div>;\n}\nconst initialTabValues = {\n  selectedIndex: 0,\n  values: [\n    { text: 'Tutorial', isSelected: true },\n    { text: 'Control Algorithms', isSelected: false },\n    { text: 'Mapping Algorithms', isSelected: false },\n    { text: 'Mapping & Controls', isSelected: false },\n    { text: 'Documentation', isSelected: false },\n  ],\n};\nconst IndexPage = () => {\n  const [tabValues, setTabValues] = useState(initialTabValues);\n  return (\n    <main className=\"h-full text-gray-200\">\n      <div className=\"bg-[#747474] text-6xl flex items-center text-center justify-center py-6 mb-6\">\n        Dubins Car Sandbox\n      </div>\n      <Tabs tabValues={tabValues} setTabValues={setTabValues} />\n\n      <div>\n        {\n          {\n            0: <Tutorial />,\n            1: <ControlAlgorithms />,\n            2: <MappingAlgorithms />,\n            3: <MappingandControlAlgorithms />,\n            4: <Docs />,\n          }[tabValues.selectedIndex]\n        }\n      </div>\n    </main>\n  );\n};\n\nexport default IndexPage;\n"],"names":["Car","x_","y_","theta_","phi_","length","color","car_ref","p5","speed","phi","max_steer","max_speed","theta_dot","this","loc","createVector","vel","theta","car_len","car_wid","tyre_wid","tyre_len","shouldDrawImpossibleRegion","run","display","move","current","x","y","push","translate","rotate","draw_car_body","draw_front_wheels","pop","drawImpossibleRegion","stroke","strokeWeight","fill","top_x","top_y","rect","noStroke","back_x","top_back_y","btm_back_y","front_center_x","top_front_center_y","btm_front_center_y","PI","line","triangle","steer","setSpeed","max_spee","Math","cos","sin","tan","add","dont_crash","track","targetX","targetY","dist2goal","undefined","i","deltaX","deltaY","heading","car2goal","normalize","thetaError","angleBetween","noFill","radius","circle","getCarState","CarManager","pCar","pSketchState","pP5","car","controlIndex","sketchState","currentSteer","currentPathIndex","paths","reachedGoal","pidWayPointIndex","pidDubinsWayPointIndex","waypoints","waypointsIndex","step","setSteeringForNewPath","path","floor","numSteps","newSpeed","carSpeed","setPaths","pPaths","steering","direction","dist","p1","p2","sqrt","pidTrackPoseWayPoints","poseWayPoints","curWayPoint","pidTrackDubinsWayPoints","positionWayPoints","pidTrackPositionWayPoints","pwaypoints","Tab","text","isSelected","setState","index","onClick","prev","selectedIndex","values","selectedTabIndex","tabValues","newTabValues","forEach","val","className","Tabs","setTabValues","map","tabValue","key","TutorialText","href","target","class","useCanvasSize","useState","width","height","windowSize","setWindowSize","useEffect","handleResize","windowWidth","window","innerWidth","windowHeight","innerHeight","addEventListener","removeEventListener","initialSketchState","canvasWidth","canvasHeight","Tutorial","setSketchState","canvasSize","sketchRef","useRef","myp5","W","H","carLenH","max","carLenW","carLen","min","setup","createCanvas","background","draw","scale","keyPressed","keyCode","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","tutorialSketch","remove","ref","style","bangbangSketch","carLength","carColor","carManager","drawPositionWayPoints","point","textSize","mousePressed","waypoint","mouseX","mouseY","controlMode","BangBang","disabled","optimalControlSketch","dubinsState","writeText","radians","selectedCarTheta","selected","deselectedWayPoints","pose","canvas","initialState","controls","state","isLoading","setIsLoading","canvas_ref","process","postData","targetPoses","axios","payload","data","my_p5","optimalControlsSketch","value","setValue","updatedPoseWaypoints","getDubinsPath","hasControlInputs","type","CONTROL_ALGORITHM_OPTIONS","id","unavailable","ControlAlgorithms","selectedAlgorithm","setSelectedAlgorithm","options","updateParentSelection","PID","bfsSketchFunction","bfsState","menuValue","shouldAnimate","green","blue","red","explorationIndex","isExplorationComplete","goalPathNodes","points","goalNode","targetNodeIndex","parentIndex","goalPathDrawingIndex","handleMouseClicked","shape","r","obstacles","rectangle","w","h","startPoint","goalPoint","xstart","ystart","startRadius","xgoal","ygoal","goalRadius","drawStartandGoal","parent","parentX","parentY","drawRRTPoints","obs","animateRRTExploration","nextNode","animateRRTGoalPath","preparePayload","stepSize","obstacle","x_lower","y_lower","x_upper","y_upper","definition","StartNodeSlider","GoalNodeSlider","CircleRadiusSlider","StepSizeRadiusSlider","RectangleSizeSlider","setWidth","setHeight","SHAPES","minRadius","maxRadius","minLength","maxLength","BFSVisualization","setMenuValue","setShouldAnimate","getBFSMap","Rectangle","Circle","rrtSketchFunction","rrtState","RRTVisualization","getRRTMap","MAPPING_ALGORITHM_OPTIONS","MappingAlgorithms","selectedMappingAlgorithm","setSelectedMappingAlgorithm","RRT","BFS","drawObstacles","start2goalPath","reverse","BangBangRRTVisualization","bangBangRRTSketchFunction","MappingandControlAlgorithms","selectedControlAlgorithm","setSelectedControlAlgorithm","Docs","initialTabValues"],"sourceRoot":""}
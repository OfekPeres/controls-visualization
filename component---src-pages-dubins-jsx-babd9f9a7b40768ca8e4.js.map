{"version":3,"file":"component---src-pages-dubins-jsx-babd9f9a7b40768ca8e4.js","mappings":"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","sources":["webpack://controls-visualizer/./src/components/pidVisualization/car.js","webpack://controls-visualizer/./src/carVisualizer/carManager.js","webpack://controls-visualizer/./src/components/dubinsPathVisualization/dubinsPathSketch.js","webpack://controls-visualizer/./src/components/dubinsPathVisualization/index.jsx","webpack://controls-visualizer/./src/pages/dubins.jsx"],"sourcesContent":["class Car {\n  // Instance variables\n  speed = 0; // Car scalar speed\n  phi = 0; // Wheel angle\n\n  max_steer = 0.5; // Wheel rotation limit\n  max_speed = 50; // Arbitrary choice for max car speed\n\n  theta_dot = 0; // Rate of change of orientation\n\n  constructor(x_, y_, theta_, phi_, length, color, car_ref, p5) {\n    // Location vector\n    this.loc = p5.createVector(x_, y_);\n    // Velocity vector\n    this.vel = p5.createVector(1, 1);\n    // Starting angle (0 = right, pi/2 = down, pi = left, 3pi/2 = up)\n    this.theta = theta_;\n    this.p5 = p5; // utilize p5 instance passed in to car object\n    // Car dimensions\n    this.car_len = length;\n    this.car_wid = this.car_len / 2.5;\n    this.tyre_wid = this.car_wid / 7;\n    this.tyre_len = this.car_len / 6.6;\n    this.color = color;\n    this.car_ref = car_ref;\n    this.phi = phi_;\n    this.shouldDrawImpossibleRegion = false;\n  }\n  /**\n   * A function that manages running the car. Both displays the car and runs it\n   * thru the dynamics\n   */\n  run() {\n    this.display();\n    this.move();\n    if (this.car_ref) {\n      this.car_ref.current = {\n        x: this.loc.x,\n        y: this.loc.y,\n        theta: this.theta,\n        phi: this.phi,\n      };\n    }\n\n  }\n\n  /**\n   * A function to draw the car onto the screen with the correct position and\n   * orientation\n   */\n  display() {\n    this.p5.push();\n    this.p5.translate(this.loc.x, this.loc.y); // Move to ref frame of the car (car center is now <0, 0>)\n    this.p5.rotate(this.theta); // Rotate reference frame to match car orientation\n\n    this.draw_car_body(); // draw main car body + back wheels\n    this.draw_front_wheels(); // draw fron wheels angled by (phi)\n    this.p5.pop();\n  }\n\n  /**\n   * A Helper function to draw the body of the car\n   */\n  draw_car_body() {\n    if (this.shouldDrawImpossibleRegion) this.drawImpossibleRegion();\n    // Car body\n    this.p5.stroke(0);\n    this.p5.strokeWeight(2);\n    this.p5.fill(this.color);\n    let top_x = -this.car_len / 2;\n    let top_y = -this.car_wid / 2;\n    this.p5.rect(top_x, top_y, this.car_len, this.car_wid, 10); // car body\n\n    // Back Wheels\n    this.p5.fill(0);\n    this.p5.noStroke();\n    let back_x = -this.car_len / 2 + this.tyre_len / 3;\n    let top_back_y = -this.car_wid / 2 + 0.5 * this.tyre_wid;\n    let btm_back_y = this.car_wid / 2 - 1.5 * this.tyre_wid;\n    this.p5.rect(back_x, top_back_y, this.tyre_len, this.tyre_wid, 5);\n    this.p5.rect(back_x, btm_back_y, this.tyre_len, this.tyre_wid, 5);\n  }\n\n  /**\n   * A Helper function to draw the front wheels (with the correct phi angle)\n   */\n  draw_front_wheels() {\n    this.p5.noStroke();\n    this.p5.fill(0);\n\n    let front_center_x =\n      this.car_len / 2 - this.tyre_len / 2 - this.tyre_len / 3;\n    let top_front_center_y = -this.car_wid / 2 + this.tyre_wid;\n    let btm_front_center_y = this.car_wid / 2 - this.tyre_wid;\n\n    // Front Left wheel\n    this.p5.push();\n    this.p5.translate(front_center_x, top_front_center_y);\n    this.p5.rotate(this.phi);\n    this.p5.rect(\n      -this.tyre_len / 2,\n      -this.tyre_wid / 2,\n      this.tyre_len,\n      this.tyre_wid,\n      5\n    );\n    this.p5.pop();\n\n    // Fron right wheel\n    this.p5.push();\n    this.p5.translate(front_center_x, btm_front_center_y);\n    this.p5.rotate(this.phi);\n    this.p5.rect(\n      -this.tyre_len / 2,\n      -this.tyre_wid / 2,\n      this.tyre_len,\n      this.tyre_wid,\n      5\n    );\n    this.p5.pop();\n\n    // Draw a vector to make it clear what direction the car is pointing\n    this.p5.push();\n    this.p5.stroke(220);\n    this.p5.strokeWeight(1);\n    this.p5.fill(180);\n    this.p5.rotate(-this.p5.PI / 2);\n    this.p5.line(0, 0, 0, this.car_len/2);\n    this.p5.translate(0, this.car_len/2)\n    this.p5.triangle(-5, 0, 0, 5, 5, 0);\n    this.p5.pop();\n  }\n\n  /**\n   *\n   * @param {*} u The new steering angle of the car\n   */\n  steer(phi) {\n    if (phi > this.max_steer) this.phi = this.max_steer;\n    else if (phi < -this.max_steer) this.phi = -this.max_steer;\n    else this.phi = phi;\n  }\n\n  /**\n   *\n   * @param {*} speed The new speed of the car\n   */\n  setSpeed(speed) {\n    if (speed > this.max_speed) this.speed = this.max_speed;\n    else if (speed < -this.max_speed) this.speed = -this.max_spee;\n    else this.speed = speed;\n  }\n  /**\n   * The dynamics of the car are encoded in this function. A call to move \"steps\"\n   * the car forward in time once based on its current position, orientation,\n   * and steering angle (phi)\n   */\n  move() {\n    // Update velocity, theta and location\n    this.vel.x = this.speed * Math.cos(this.theta);\n    this.vel.y = this.speed * Math.sin(this.theta);\n    this.theta_dot = (this.speed * Math.tan(this.phi)) / this.car_len;\n    this.theta += this.theta_dot;\n    this.loc.add(this.vel);\n    // this.dont_crash();\n  }\n\n  // Width and height (600) are hard-coded magic numbers atm.\n  dont_crash() {\n    if (this.loc.x < -this.car_len * 2) {\n      this.loc.x = 0;\n      this.speed = 0;\n    }\n\n    if (this.loc.x > 800) {\n      this.loc.x = 600;\n      this.speed = 0;\n    }\n\n    if (this.loc.y < -50) {\n      this.loc.y = 0;\n      this.speed = 0;\n    }\n\n    if (this.loc.y > 700) {\n      this.loc.y = 600;\n      this.speed = 0;\n    }\n  }\n\n  track(targetX, targetY, dist2goal) {\n    if (dist2goal == null || dist2goal == undefined)\n    {\n      dist2goal = 10\n    }\n    for (let i = 0; i <20; i++)\n    {\n\n      const deltaX = targetX - this.loc.x;\n      const deltaY = targetY - this.loc.y;\n      \n      const heading = this.p5.createVector(\n        this.p5.cos(this.theta),\n        this.p5.sin(this.theta)\n        );\n        const car2goal = this.p5.createVector(deltaX, deltaY).normalize();\n        \n        const thetaError = heading.angleBetween(car2goal);\n        \n        if (thetaError > 0) {\n          this.phi = this.max_steer;\n        } else if (thetaError < 0) {\n          this.phi = -this.max_steer;\n        } else {\n          this.phi = 0;\n        }\n        \n        this.speed = 0.1;\n        // if (Math.abs(deltaX) < dist2goal && Math.abs(deltaY) < dist2goal) {\n        //   this.speed = 0;\n        // } else {\n        //   this.speed = 0.1;\n        // }\n        this.move()\n      }\n  }\n\n  drawImpossibleRegion() {\n    this.p5.noFill();\n    this.p5.stroke('red');\n    const radius = this.car_len / this.p5.tan(this.max_steer);\n    this.p5.circle(0, radius, radius * 2);\n    this.p5.circle(0, -radius, radius * 2);\n  }\n\n  getCarState() {\n    return { x: this.loc.x, y: this.loc.y, theta: this.theta };\n  }\n}\n\nexport default Car;\n","export default class CarManager {\n  constructor(pCar, pSketchState, pP5) {\n    this.car = pCar;\n    this.p5 = pP5;\n    this.controlIndex = 0;\n    this.sketchState = pSketchState;\n    this.currentSteer = 0;\n    this.currentPathIndex = 0;\n    this.paths = null;\n    this.reachedGoal = false\n    this.pidWayPointIndex = 0\n    this.pidDubinsWayPointIndex = 0\n  }\n\n  step() {\n    if (!this.paths) {\n      this.car.display();\n      return;\n    }\n    if (this.currentPathIndex > this.paths.length - 1) {\n      this.car.display();\n      this.car.setSpeed(0)\n      this.car.steer(0)\n      this.reachedGoal = true\n      return;\n    }\n\n    // Set the initial steering for first set of steps\n    if (this.currentPathIndex === 0 && this.controlIndex === 0) {\n      this.setSteeringForNewPath(this.paths[this.currentPathIndex]);\n    }\n    const path = this.paths[this.currentPathIndex];\n    // Second to last step should be handled specially because of partial step size\n    if (this.controlIndex == Math.floor(path.numSteps)) {\n      //   Scale speed down to a fraction of the car speed for the final time step\n      const newSpeed =\n        this.sketchState.carSpeed * (path.numSteps - this.controlIndex);\n      this.car.setSpeed(newSpeed);\n      this.car.steer(this.currentSteer);\n      this.controlIndex++;\n    }\n    // The \"normal\" step\n    else if (this.controlIndex < Math.floor(path.numSteps)) {\n      this.car.setSpeed(this.sketchState.carSpeed);\n      this.car.steer(this.currentSteer);\n      this.controlIndex++;\n    }\n    // Move to next path in Paths if there is any\n    else {\n      this.controlIndex = 0;\n      this.currentPathIndex++;\n      this.setSteeringForNewPath(this.paths[this.currentPathIndex]);\n    }\n    this.car.run();\n  }\n\n  /**\n   *\n   * @param {*} pPaths a list of the form [{\n   *  direction: \"LEFT\" | \"RIGHT\" | \"STRAIGHT\",\n   * numSteps: float\n   *\n   * }]\n   */\n  setPaths(pPaths) {\n    this.paths = pPaths;\n  }\n  /**\n   *\n   * @param {*} path a dictionary of the form {\n   *  direction: \"LEFT\" | \"RIGHT\" | \"STRAIGHT\",\n   * numSteps: float\n   *\n   * }\n   */\n  setSteeringForNewPath(path) {\n    if (!path) return;\n    let steering = 0; // go straight\n    if (path.direction === 'LEFT') {\n      steering = this.car.max_steer;\n    } else if (path.direction === 'RIGHT') {\n      steering = -this.car.max_steer;\n    } else if (path.direction === 'STRAIGHT') {\n      steering = 0;\n    }\n    this.currentSteer = steering;\n  }\n\n  setpidWaypoints()\n  {\n    \n  }\n  dist(p1,p2)\n  {\n    return Math.sqrt((p1.x-p2.x)*(p1.x-p2.x) + (p1.y-p2.y)*(p1.y-p2.y))\n  }\n  pidTrackPoseWayPoints()\n  {\n    const dist2goal = 5\n    if (this.pidWayPointIndex >= this.sketchState.poseWayPoints.length) \n    {\n      this.car.display();\n      this.car.setSpeed(0)\n      this.car.steer(0)\n      this.reachedGoal = true\n      return\n    }\n    const curWayPoint = this.sketchState.poseWayPoints[this.pidWayPointIndex]\n    this.car.track(curWayPoint.x, curWayPoint.y, dist2goal)\n    const dist = this.dist(curWayPoint, this.car.loc)\n    console.log(dist)\n    if (dist <= dist2goal)\n    {\n      this.pidWayPointIndex++;\n    }\n    this.car.run();\n  }\n  pidTrackDubinsWayPoints()\n  {\n    const dist2goal = 2\n    if (this.pidDubinsWayPointIndex >= this.sketchState.positionWayPoints.length) \n    {\n      this.car.display();\n      this.car.setSpeed(0)\n      this.car.steer(0)\n      this.reachedGoal = true\n      return\n    }\n    const curWayPoint = this.sketchState.positionWayPoints[this.pidDubinsWayPointIndex]\n    this.car.track(curWayPoint.x, curWayPoint.y, dist2goal)\n    const dist = this.dist(curWayPoint, this.car.loc)\n    console.log(dist)\n    if (dist <= dist2goal)\n    {\n      this.pidDubinsWayPointIndex++;\n    }\n    this.car.run();\n  }\n}\n","import Car from '../pidVisualization/car';\nimport CarManager from '../../carVisualizer/carManager';\nexport default function pidSketchFunction(\n  dubinsState,\n  sketchState,\n  setSketchState,\n  car_ref\n) {\n  return (p5) => {\n    // Define some sketch constants\n    const W = sketchState.canvasWidth;\n    const H = sketchState.canvasHeight;\n    // Define some colors\n    const green = p5.color(0, 255, 0);\n    const blue = p5.color(0, 50, 255);\n    const red = p5.color(255, 50, 10);\n    let car = new Car(\n      car_ref.current.x,\n      car_ref.current.y,\n      car_ref.current.theta,\n      car_ref.current.phi,\n      sketchState.carLength,\n      sketchState.carColor,\n      car_ref,\n      p5\n    );\n\n    car.setSpeed(0);\n\n    const carManager = new CarManager(car, sketchState, p5);\n    if (dubinsState && dubinsState.paths) {\n      carManager.setPaths(dubinsState.paths);\n    }\n    // SETUP\n    function setup() {\n      const canvas = p5.createCanvas(W, H);\n      //   Highly Important, p5js is a left handed system, so translate\n      //   the origin to the bottom left corner and flip the y axis\n      //   However, this will still result in the angles facing exactly 180 degrees incorrectly\n      // when switching between the two systems, so before sending any angles to the back end, rotate them by 180\n      p5.translate(0, H); //moves the origin to bottom left\n      p5.scale(1, -1); //flips the y values so y increases \"up\"\n\n      p5.background(100);\n      canvas.mousePressed(mousePressed);\n    }\n\n    function drawPoseWayPoints() {\n      sketchState.poseWayPoints.forEach((pose) => {\n        const c = new Car(\n          pose.x,\n          pose.y,\n          pose.theta,\n          0,\n          sketchState.carLength,\n          'green',\n          null,\n          p5\n        );\n        c.display();\n        writeText(pose.index, pose.x, pose.y);\n        if (pose.selected) {\n          p5.noFill();\n          p5.stroke(255, 240, 254);\n          p5.strokeWeight(1);\n          p5.circle(pose.x, pose.y, sketchState.carLength + 5);\n        }\n      });\n    }\n\n    function writeText(text, x, y) {\n      p5.push();\n      p5.scale(1, -1);\n      p5.textSize(12)\n      p5.text(text, x, -y);\n      p5.pop();\n    }\n    function drawPositionWayPoints() {\n      sketchState.positionWayPoints.forEach((point) => {\n        p5.circle(point.x, point.y, sketchState.carLength * 0.5);\n        writeText(\n          point.index,\n          point.x - sketchState.carLength * 0.05,\n          point.y - sketchState.carLength * 0.01\n        );\n      });\n    }\n\n    function mousePressed() {\n      // Set Waypoint!\n      const waypoint = {\n        x: p5.mouseX,\n        y: H - p5.mouseY,\n        theta: p5.radians(sketchState.selectedCarTheta),\n        index: sketchState.poseWayPoints.length + 1,\n        selected: true,\n      };\n      //   deselect previous poseWayPoints\n      const deselectedWayPoints = sketchState.poseWayPoints.map((pose) => ({\n        ...pose,\n        selected: false,\n      }));\n      setSketchState((prev) => ({\n        ...prev,\n        poseWayPoints: [...deselectedWayPoints, waypoint],\n      }));\n    }\n\n    function draw() {\n      p5.background(100);\n      p5.translate(0, H); //moves the origin to bottom left\n      p5.scale(1, -1); //flips the y values so y increases \"up\"\n      drawPositionWayPoints();\n      drawPoseWayPoints();\n      //  !!!! Animate thru controls\n      //   if (\n      //     sketchState.hasControlInputs &&\n      //     controlIndex < dubinsState.controls.length - 1\n      //   ) {\n      //     car.setSpeed(sketchState.carSpeed);\n      //     car.steer(dubinsState.controls[controlIndex]);\n      //     controlIndex++;\n      //     car.run();\n      //     if (controlIndex == dubinsState.controls.length - 1) {\n      //       car.setSpeed(0);\n      //       setSketchState((prev) => ({ ...prev, hasControlInputs: false }));\n      //     }\n      //   }\n\n      // Use the car manager class to run thru a set of dubins paths\n      if (dubinsState && dubinsState.paths && !carManager.reachedGoal && sketchState.controlMode == \"dubins\") {\n        carManager.step();\n      }\n      else if (sketchState && sketchState.poseWayPoints && sketchState.controlMode==\"pidPoseWayPoints\")\n      {\n        carManager.pidTrackPoseWayPoints()\n      } \n      else if (sketchState && sketchState.poseWayPoints && sketchState.controlMode==\"pidDubinsWayPoints\")\n      {\n        carManager.pidTrackDubinsWayPoints()\n      } \n      else {\n        //     car = new Car(0,0,0, p5)\n        //     controlIndex = 0\n        car.run();\n      }\n      if (carManager.reachedGoal)\n      {\n        setSketchState(prev => ({...prev, controlMode:null}))\n      }\n    }\n\n    function keyPressed() {\n      if (p5.keyCode === p5.UP_ARROW || p5.key === 'w')\n        car.setSpeed(car.speed + 1);\n      else if (p5.keyCode === p5.DOWN_ARROW || p5.key === 's')\n        car.setSpeed(car.speed - 1);\n      else if (p5.keyCode === p5.LEFT_ARROW || p5.key === 'a')\n        car.steer(car.phi + 0.5);\n      else if (p5.keyCode === p5.RIGHT_ARROW || p5.key === 'd')\n        car.steer(car.phi - 0.5);\n      else if (p5.key === 't') {\n        car.shouldDrawImpossibleRegion = !car.shouldDrawImpossibleRegion;\n      }\n    }\n\n    p5.setup = setup;\n    p5.draw = draw;\n    p5.keyPressed = keyPressed;\n  };\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport p5 from 'p5';\nimport ReactLoading from 'react-loading';\nimport axios from 'axios';\nimport Slider from '../ui/slider';\nimport dubinsPathSketchFunction from './dubinsPathSketch';\nconst initialState = {\n  waypoints: [],\n  controls: [],\n};\n\nconst initialSketchState = {\n  carLength: 30,\n  carSpeed: 1,\n  carColor: '#ee6352',\n  selectedCarTheta: 0,\n  poseWayPoints: [],\n  positionWayPoints: [],\n  canvasWidth: 600,\n  canvasHeight: 600,\n  controlMode: null,\n};\nfunction DubinsPath() {\n  const [state, setState] = useState(initialState);\n  const [sketchState, setSketchState] = useState(initialSketchState);\n  const [isLoading, setIsLoading] = useState(false);\n  const canvas_ref = useRef();\n  const car_ref = useRef({\n    x: sketchState.canvasWidth / 2,\n    y: sketchState.canvasHeight / 2,\n    theta: 0,\n    phi: 0,\n  });\n\n  /*----------------------------------------------------------------------------\n  Send the user defined pose waypoints to the backend to get the control inputs \n  to drive to!\n  --------------------------------------------------------------------------- */\n  async function getDubinsPath() {\n    if (isLoading) return;\n    setIsLoading(true);\n    const url = `${process.env.GATSBY_BACKEND_URL}/dubins_path`;\n\n    const postData = {\n      carLength: sketchState.carLength,\n      carSpeed: sketchState.carSpeed,\n      targetPoses: [\n        {\n          x: car_ref.current.x,\n          y: car_ref.current.y,\n          theta: car_ref.current.theta,\n        },\n        ...sketchState.poseWayPoints,\n      ],\n      ...car_ref.current,\n    };\n    const payload = await axios.post(url, postData);\n    setIsLoading(false);\n    setState(payload.data);\n    setSketchState((prev) => ({\n      ...prev,\n      positionWayPoints: payload.data.waypoints,\n      controlMode: 'null',\n    }));\n  }\n\n  useEffect(() => {\n    const my_p5 = new p5(\n      dubinsPathSketchFunction(state, sketchState, setSketchState, car_ref),\n      canvas_ref.current\n    );\n    return () => my_p5.remove();\n  }, [state, sketchState]);\n\n  function handleSelectedCarThetaUpdate(value) {\n    const updatedPoseWaypoints = sketchState.poseWayPoints.map((pose) => {\n      if (pose.selected) {\n        return { ...pose, theta: (value * Math.PI) / 180 };\n      } else {\n        return { ...pose };\n      }\n    });\n    setSketchState((prev) => ({\n      ...prev,\n      selectedCarTheta: value,\n      poseWayPoints: updatedPoseWaypoints,\n    }));\n  }\n  return (\n    <div className=\"flex flex-col items-center justify-center\">\n      {isLoading ? (\n        <div className=\"flex items-center justify-center space-x-3\">\n          <p>\"Waiting for backend to deliver results!\"</p>\n          <ReactLoading\n            type=\"spinningBubbles\"\n            color=\"blue\"\n            width=\"24px\"\n            height=\"24px\"\n          ></ReactLoading>\n        </div>\n      ) : (\n        ''\n      )}\n\n      <div\n        ref={canvas_ref}\n        style={{\n          width: sketchState.canvasWidth,\n          height: sketchState.canvasHeight,\n        }}\n      ></div>\n      <div className=\"flex justify-center items-center space-x-3\">\n        <button\n          className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:cursor-not-allowed\"\n          onClick={() => getDubinsPath()}\n          disabled={isLoading || sketchState.poseWayPoints.length < 1}\n        >\n          Calculate Dubins Path!\n        </button>\n        <button\n          className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:cursor-not-allowed\"\n          onClick={() => {\n            setSketchState((prev) => ({\n              ...prev,\n              controlMode: 'dubins',\n            }));\n          }}\n          disabled={isLoading || sketchState.poseWayPoints.length < 1}\n        >\n          Run Open Loop Dubins Path!\n        </button>\n        <button\n          className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:cursor-not-allowed\"\n          onClick={() =>\n            setSketchState((prev) => ({\n              ...prev,\n              controlMode: 'pidPoseWayPoints',\n            }))\n          }\n          disabled={isLoading}\n        >\n          Track the waypoints with PID!\n        </button>\n        <button\n          className=\"bg-blue-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-blue-400 hover:ring hover:ring-blue-400 disabled:cursor-not-allowed\"\n          onClick={() =>\n            setSketchState((prev) => ({\n              ...prev,\n              controlMode: 'pidDubinsWayPoints',\n            }))\n          }\n          disabled={isLoading}\n        >\n          Track Dubins waypoints with PID!\n        </button>\n        <button\n          className=\"bg-red-300 px-3 py-2 m-3 rounded-md focus:outline-none focus:ring focus:ring-red-400 hover:ring hover:ring-red-400\"\n          onClick={() => {\n            setSketchState({\n              ...sketchState,\n              poseWayPoints: [],\n              positionWayPoints: [],\n              hasControlInputs: false,\n            });\n\n            setState((prev) => ({ ...prev, waypoints: null, paths: null }));\n          }}\n        >\n          Clear Waypoints (X)\n        </button>\n      </div>\n      <div className=\"flex flex-col items-center justify-center text-lg\">\n        <h1 className=\"text-3xl font-bold\">Customize your waypoints!</h1>\n        <h3>\n          Set the orientation of your waypoint: {sketchState.selectedCarTheta}\n        </h3>\n        <Slider\n          value={sketchState.selectedCarTheta}\n          setValue={handleSelectedCarThetaUpdate}\n          min={0}\n          max={360}\n          step={1}\n          color={'blue'}\n        />\n        <h1 className=\"text-3xl font-bold\">Customize your car!</h1>\n        <h3>Set the Length of your car: {sketchState.carLength}</h3>\n        <Slider\n          value={sketchState.carLength}\n          setValue={(value) =>\n            setSketchState({ ...sketchState, carLength: value })\n          }\n          min={20}\n          max={100}\n          step={1}\n          color={'blue'}\n        />\n        <h3>Set the Speed of your car: {sketchState.carSpeed}</h3>\n        <Slider\n          value={sketchState.carSpeed}\n          setValue={(value) =>\n            setSketchState({ ...sketchState, carSpeed: value })\n          }\n          min={1}\n          max={sketchState.carLength}\n          step={1}\n          color={'green'}\n        />\n        <h3>Set the Color of your car</h3>\n        <input\n          type=\"color\"\n          value={sketchState.carColor}\n          onInput={(e) =>\n            setSketchState({ ...sketchState, carColor: e.target.value })\n          }\n        />\n      </div>\n      <button\n        className=\"px-3 py-2 bg-gray-400\"\n        onClick={() => {\n          setSketchState((prev) => ({\n            ...prev,\n            poseWayPoints: [{ ...car_ref.current }, ...prev.poseWayPoints],\n          }));\n        }}\n      >\n        Update poseWayPoints to include car location\n      </button>\n      <div>{JSON.stringify(sketchState.poseWayPoints)}</div>\n      <div>{JSON.stringify(state)}</div>\n    </div>\n  );\n}\n\nexport default DubinsPath;\n","import React from 'react';\nimport DubinsPathVisualization from '../components/dubinsPathVisualization';\n// markup\nconst DubinsPage = () => {\n  return (\n    <main>\n      <div className=\"bg-blue-300 text-6xl flex items-center justify-center py-6 mb-6\">Dubins Path Visualization</div>\n      {typeof window !== 'undefined' && <DubinsPathVisualization/>} \n    </main>\n  );\n};\n\nexport default DubinsPage;\n"],"names":["Car","x_","y_","theta_","phi_","length","color","car_ref","p5","speed","phi","max_steer","max_speed","theta_dot","this","loc","createVector","vel","theta","car_len","car_wid","tyre_wid","tyre_len","shouldDrawImpossibleRegion","run","display","move","current","x","y","push","translate","rotate","draw_car_body","draw_front_wheels","pop","drawImpossibleRegion","stroke","strokeWeight","fill","top_x","top_y","rect","noStroke","back_x","top_back_y","btm_back_y","front_center_x","top_front_center_y","btm_front_center_y","PI","line","triangle","steer","setSpeed","max_spee","Math","cos","sin","tan","add","dont_crash","track","targetX","targetY","dist2goal","undefined","i","deltaX","deltaY","heading","car2goal","normalize","thetaError","angleBetween","noFill","radius","circle","getCarState","CarManager","pCar","pSketchState","pP5","car","controlIndex","sketchState","currentSteer","currentPathIndex","paths","reachedGoal","pidWayPointIndex","pidDubinsWayPointIndex","step","setSteeringForNewPath","path","floor","numSteps","newSpeed","carSpeed","setPaths","pPaths","steering","direction","setpidWaypoints","dist","p1","p2","sqrt","pidTrackPoseWayPoints","poseWayPoints","curWayPoint","console","log","pidTrackDubinsWayPoints","positionWayPoints","pidSketchFunction","dubinsState","setSketchState","W","canvasWidth","H","canvasHeight","carLength","carColor","carManager","writeText","text","scale","textSize","mousePressed","waypoint","mouseX","mouseY","radians","selectedCarTheta","index","selected","deselectedWayPoints","map","pose","prev","setup","canvas","createCanvas","background","draw","forEach","point","controlMode","keyPressed","keyCode","UP_ARROW","key","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","initialState","waypoints","controls","initialSketchState","useState","state","setState","isLoading","setIsLoading","canvas_ref","useRef","process","postData","targetPoses","axios","payload","data","useEffect","my_p5","dubinsPathSketchFunction","remove","className","type","width","height","ref","style","onClick","getDubinsPath","disabled","hasControlInputs","value","setValue","updatedPoseWaypoints","min","max","onInput","e","target","JSON","stringify","window"],"sourceRoot":""}